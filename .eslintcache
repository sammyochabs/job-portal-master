[{"D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\index.js":"1","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\reportWebVitals.js":"2","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\App.js":"3","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\providers\\app.js":"4","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\reuseable\\Loader.js":"5","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\navigations\\default-navigation.js":"6","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\error-handling\\ErrorBoundary.js":"7","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\navigations\\auth-navigation.js":"8","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\constants\\RouteNames.js":"9","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\auth\\Login.js":"10","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\auth\\RegeneratePassword.js":"11","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\FallBackLoader.js":"12","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\dashboard\\Dashboard.js":"13","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\users-admin\\UsersList.js":"14","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\users-admin\\UserEdit.js":"15","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\404\\NotFound.js":"16","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\error-handling\\components\\Error.js":"17","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\user-chat\\Chat.js":"18","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\global-notifications\\GlobalNotifications.js":"19","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\user-chat\\List.js":"20","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\store\\reducers\\auth.js":"21","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\store\\reducers\\master.js":"22","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\states\\StateEdit.js":"23","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\states\\StateList.js":"24","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\reuseable\\BasePagination.js":"25","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\reuseable\\BaseList.js":"26","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\reuseable\\base-form.js":"27","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\reuseable\\Bredcrumb.js":"28","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\reuseable\\BaseImageList.js":"29","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\reuseable\\hooks\\useForm.js":"30","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\store\\actions\\dashboard.js":"31","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\store\\actions\\auth.js":"32","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\store\\actions\\user.js":"33","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\store\\actions\\master.js":"34","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\store\\actions\\chat.js":"35","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\store\\actions\\globalNotification.js":"36","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\layouts\\defaultStructure.js":"37","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\dashboard\\components\\TotalCard.js":"38","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\users-admin\\components\\Item.js":"39","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\user-chat\\components\\ChatRoom.js":"40","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\user-chat\\components\\Item.js":"41","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\global-notifications\\components\\UserList.js":"42","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\global-notifications\\components\\Filter.js":"43","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\states\\components\\Item.js":"44","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\store\\actions\\HttpRequest.js":"45","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\layouts\\Footer.js":"46","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\layouts\\TopBar.js":"47","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\layouts\\SideBar.js":"48","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\user-chat\\components\\ChatSearchItem.js":"49","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\helpers\\helper.js":"50","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\user-chat\\components\\ChatMessage.js":"51","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\constants\\api-config.js":"52","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\layouts\\components\\UserProfile.js":"53","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\layouts\\components\\SideBarItem.js":"54","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\layouts\\components\\NotificationsAlert.js":"55","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\cities\\CityList.js":"56","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\cities\\CityEdit.js":"57","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\companytype\\CompanyTypeEdit.js":"58","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\companytype\\CompanyTypeList.js":"59","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\skills\\SkillList.js":"60","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\skills\\SkillEdit.js":"61","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\companytype\\components\\Item.js":"62","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\cities\\components\\Item.js":"63","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\skills\\components\\Item.js":"64","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\education\\EducationList.js":"65","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\education\\EducationEdit.js":"66","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\education\\components\\Item.js":"67","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\qualification\\QualificationEdit.js":"68","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\qualification\\QualificationList.js":"69","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\qualification\\components\\Item.js":"70","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\job-master\\JobMaster.js":"71","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\index.js":"72","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\reportWebVitals.js":"73","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\App.js":"74","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\providers\\app.js":"75","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\navigations\\default-navigation.js":"76","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\reuseable\\Loader.js":"77","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\error-handling\\ErrorBoundary.js":"78","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\navigations\\auth-navigation.js":"79","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\FallBackLoader.js":"80","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\constants\\RouteNames.js":"81","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\auth\\Login.js":"82","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\dashboard\\Dashboard.js":"83","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\auth\\RegeneratePassword.js":"84","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\users-admin\\UserEdit.js":"85","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\users-admin\\UsersList.js":"86","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\404\\NotFound.js":"87","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\user-chat\\List.js":"88","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\error-handling\\components\\Error.js":"89","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\user-chat\\Chat.js":"90","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\store\\reducers\\master.js":"91","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\global-notifications\\GlobalNotifications.js":"92","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\store\\reducers\\auth.js":"93","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\states\\StateEdit.js":"94","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\states\\StateList.js":"95","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\job-master\\JobMaster.js":"96","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\cities\\CityList.js":"97","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\cities\\CityEdit.js":"98","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\skills\\SkillList.js":"99","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\education\\EducationList.js":"100","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\qualification\\QualificationList.js":"101","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\education\\EducationEdit.js":"102","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\skills\\SkillEdit.js":"103","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\qualification\\QualificationEdit.js":"104","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\companytype\\CompanyTypeList.js":"105","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\companytype\\CompanyTypeEdit.js":"106","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\reuseable\\BaseImageList.js":"107","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\reuseable\\Bredcrumb.js":"108","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\reuseable\\base-form.js":"109","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\reuseable\\BaseList.js":"110","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\reuseable\\BasePagination.js":"111","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\reuseable\\hooks\\useForm.js":"112","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\store\\actions\\auth.js":"113","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\store\\actions\\dashboard.js":"114","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\store\\actions\\user.js":"115","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\store\\actions\\chat.js":"116","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\store\\actions\\master.js":"117","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\dashboard\\components\\TotalCard.js":"118","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\layouts\\defaultStructure.js":"119","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\users-admin\\components\\Item.js":"120","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\user-chat\\components\\ChatRoom.js":"121","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\user-chat\\components\\Item.js":"122","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\companytype\\components\\Item.js":"123","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\qualification\\components\\Item.js":"124","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\education\\components\\Item.js":"125","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\store\\actions\\globalNotification.js":"126","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\cities\\components\\Item.js":"127","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\skills\\components\\Item.js":"128","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\states\\components\\Item.js":"129","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\global-notifications\\components\\UserList.js":"130","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\global-notifications\\components\\Filter.js":"131","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\store\\actions\\HttpRequest.js":"132","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\layouts\\Footer.js":"133","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\layouts\\TopBar.js":"134","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\layouts\\SideBar.js":"135","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\user-chat\\components\\ChatSearchItem.js":"136","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\user-chat\\components\\ChatMessage.js":"137","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\helpers\\helper.js":"138","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\constants\\api-config.js":"139","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\layouts\\components\\NotificationsAlert.js":"140","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\layouts\\components\\SideBarItem.js":"141","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\layouts\\components\\UserProfile.js":"142","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\layouts\\components\\Job.jsx":"143","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\graphql\\client.js":"144","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\graphql\\queries\\jobQuery.js":"145","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\layouts\\components\\JobFilter.jsx":"146"},{"size":457,"mtime":1631768446000,"results":"147","hashOfConfig":"148"},{"size":362,"mtime":1631768446000,"results":"149","hashOfConfig":"148"},{"size":815,"mtime":1631768444000,"results":"150","hashOfConfig":"148"},{"size":676,"mtime":1631768446000,"results":"151","hashOfConfig":"148"},{"size":579,"mtime":1631768446000,"results":"152","hashOfConfig":"148"},{"size":5848,"mtime":1633089718170,"results":"153","hashOfConfig":"148"},{"size":726,"mtime":1631768446000,"results":"154","hashOfConfig":"148"},{"size":510,"mtime":1631768446000,"results":"155","hashOfConfig":"148"},{"size":2079,"mtime":1633089649133,"results":"156","hashOfConfig":"148"},{"size":6288,"mtime":1631768444000,"results":"157","hashOfConfig":"148"},{"size":4218,"mtime":1631768444000,"results":"158","hashOfConfig":"148"},{"size":220,"mtime":1631768444000,"results":"159","hashOfConfig":"148"},{"size":3717,"mtime":1632462718000,"results":"160","hashOfConfig":"148"},{"size":2350,"mtime":1631768444000,"results":"161","hashOfConfig":"148"},{"size":12978,"mtime":1631768444000,"results":"162","hashOfConfig":"148"},{"size":335,"mtime":1631768444000,"results":"163","hashOfConfig":"148"},{"size":278,"mtime":1631768446000,"results":"164","hashOfConfig":"148"},{"size":4675,"mtime":1631768444000,"results":"165","hashOfConfig":"148"},{"size":3698,"mtime":1631768444000,"results":"166","hashOfConfig":"148"},{"size":2753,"mtime":1631768444000,"results":"167","hashOfConfig":"148"},{"size":1790,"mtime":1631768446000,"results":"168","hashOfConfig":"148"},{"size":311,"mtime":1631768446000,"results":"169","hashOfConfig":"148"},{"size":7829,"mtime":1632462718000,"results":"170","hashOfConfig":"148"},{"size":2210,"mtime":1631768444000,"results":"171","hashOfConfig":"148"},{"size":1822,"mtime":1631768446000,"results":"172","hashOfConfig":"148"},{"size":3810,"mtime":1631768446000,"results":"173","hashOfConfig":"148"},{"size":639,"mtime":1631768446000,"results":"174","hashOfConfig":"148"},{"size":486,"mtime":1631768446000,"results":"175","hashOfConfig":"148"},{"size":986,"mtime":1631768446000,"results":"176","hashOfConfig":"148"},{"size":2481,"mtime":1631768446000,"results":"177","hashOfConfig":"148"},{"size":2514,"mtime":1631768446000,"results":"178","hashOfConfig":"148"},{"size":2484,"mtime":1631768446000,"results":"179","hashOfConfig":"148"},{"size":2597,"mtime":1631768446000,"results":"180","hashOfConfig":"148"},{"size":36897,"mtime":1632747056000,"results":"181","hashOfConfig":"148"},{"size":2090,"mtime":1631768446000,"results":"182","hashOfConfig":"148"},{"size":1450,"mtime":1631768446000,"results":"183","hashOfConfig":"148"},{"size":1014,"mtime":1631768446000,"results":"184","hashOfConfig":"148"},{"size":430,"mtime":1631768444000,"results":"185","hashOfConfig":"148"},{"size":1350,"mtime":1631768444000,"results":"186","hashOfConfig":"148"},{"size":270,"mtime":1631768444000,"results":"187","hashOfConfig":"148"},{"size":2922,"mtime":1631768444000,"results":"188","hashOfConfig":"148"},{"size":4260,"mtime":1631768444000,"results":"189","hashOfConfig":"148"},{"size":2739,"mtime":1631768444000,"results":"190","hashOfConfig":"148"},{"size":985,"mtime":1631768444000,"results":"191","hashOfConfig":"148"},{"size":4513,"mtime":1631768446000,"results":"192","hashOfConfig":"148"},{"size":368,"mtime":1631768446000,"results":"193","hashOfConfig":"148"},{"size":1192,"mtime":1631768446000,"results":"194","hashOfConfig":"148"},{"size":6184,"mtime":1633089164648,"results":"195","hashOfConfig":"148"},{"size":1419,"mtime":1631768444000,"results":"196","hashOfConfig":"148"},{"size":889,"mtime":1631768446000,"results":"197","hashOfConfig":"148"},{"size":5521,"mtime":1631768444000,"results":"198","hashOfConfig":"148"},{"size":403,"mtime":1632475161000,"results":"199","hashOfConfig":"148"},{"size":1695,"mtime":1631768446000,"results":"200","hashOfConfig":"148"},{"size":1135,"mtime":1631768446000,"results":"201","hashOfConfig":"148"},{"size":2467,"mtime":1631768446000,"results":"202","hashOfConfig":"148"},{"size":2224,"mtime":1632462718000,"results":"203","hashOfConfig":"148"},{"size":8483,"mtime":1632462718000,"results":"204","hashOfConfig":"148"},{"size":7267,"mtime":1632462718000,"results":"205","hashOfConfig":"148"},{"size":2357,"mtime":1632462718000,"results":"206","hashOfConfig":"148"},{"size":2241,"mtime":1632462718000,"results":"207","hashOfConfig":"148"},{"size":7098,"mtime":1632462718000,"results":"208","hashOfConfig":"148"},{"size":991,"mtime":1632462718000,"results":"209","hashOfConfig":"148"},{"size":984,"mtime":1632462718000,"results":"210","hashOfConfig":"148"},{"size":985,"mtime":1632462718000,"results":"211","hashOfConfig":"148"},{"size":2257,"mtime":1632738675000,"results":"212","hashOfConfig":"148"},{"size":7348,"mtime":1632748473000,"results":"213","hashOfConfig":"148"},{"size":989,"mtime":1632738599000,"results":"214","hashOfConfig":"148"},{"size":7158,"mtime":1632738748000,"results":"215","hashOfConfig":"148"},{"size":2273,"mtime":1632738672000,"results":"216","hashOfConfig":"148"},{"size":993,"mtime":1632738604000,"results":"217","hashOfConfig":"148"},{"size":6354,"mtime":1633092532649,"results":"218","hashOfConfig":"148"},{"size":604,"mtime":1633156119676,"results":"219","hashOfConfig":"220"},{"size":362,"mtime":1631768446000,"results":"221","hashOfConfig":"220"},{"size":811,"mtime":1633110551222,"results":"222","hashOfConfig":"220"},{"size":625,"mtime":1633129744519,"results":"223","hashOfConfig":"220"},{"size":6616,"mtime":1633111664008,"results":"224","hashOfConfig":"220"},{"size":579,"mtime":1631768446000,"results":"225","hashOfConfig":"220"},{"size":726,"mtime":1631768446000,"results":"226","hashOfConfig":"220"},{"size":510,"mtime":1631768446000,"results":"227","hashOfConfig":"220"},{"size":220,"mtime":1631768444000,"results":"228","hashOfConfig":"220"},{"size":1998,"mtime":1633111668497,"results":"229","hashOfConfig":"220"},{"size":6288,"mtime":1631768444000,"results":"230","hashOfConfig":"220"},{"size":3717,"mtime":1632462718000,"results":"231","hashOfConfig":"220"},{"size":4218,"mtime":1631768444000,"results":"232","hashOfConfig":"220"},{"size":12978,"mtime":1631768444000,"results":"233","hashOfConfig":"220"},{"size":2350,"mtime":1631768444000,"results":"234","hashOfConfig":"220"},{"size":335,"mtime":1631768444000,"results":"235","hashOfConfig":"220"},{"size":2753,"mtime":1631768444000,"results":"236","hashOfConfig":"220"},{"size":255,"mtime":1633126324941,"results":"237","hashOfConfig":"220"},{"size":4675,"mtime":1631768444000,"results":"238","hashOfConfig":"220"},{"size":311,"mtime":1631768446000,"results":"239","hashOfConfig":"220"},{"size":3698,"mtime":1631768444000,"results":"240","hashOfConfig":"220"},{"size":1790,"mtime":1631768446000,"results":"241","hashOfConfig":"220"},{"size":7829,"mtime":1632462718000,"results":"242","hashOfConfig":"220"},{"size":2210,"mtime":1631768444000,"results":"243","hashOfConfig":"220"},{"size":9972,"mtime":1633272307818,"results":"244","hashOfConfig":"220"},{"size":2224,"mtime":1632462718000,"results":"245","hashOfConfig":"220"},{"size":8483,"mtime":1632462718000,"results":"246","hashOfConfig":"220"},{"size":2241,"mtime":1632462718000,"results":"247","hashOfConfig":"220"},{"size":2257,"mtime":1632738675000,"results":"248","hashOfConfig":"220"},{"size":2273,"mtime":1632738672000,"results":"249","hashOfConfig":"220"},{"size":7348,"mtime":1632748473000,"results":"250","hashOfConfig":"220"},{"size":7098,"mtime":1632462718000,"results":"251","hashOfConfig":"220"},{"size":7158,"mtime":1632738748000,"results":"252","hashOfConfig":"220"},{"size":2357,"mtime":1632462718000,"results":"253","hashOfConfig":"220"},{"size":7267,"mtime":1632462718000,"results":"254","hashOfConfig":"220"},{"size":986,"mtime":1631768446000,"results":"255","hashOfConfig":"220"},{"size":486,"mtime":1631768446000,"results":"256","hashOfConfig":"220"},{"size":639,"mtime":1631768446000,"results":"257","hashOfConfig":"220"},{"size":3810,"mtime":1631768446000,"results":"258","hashOfConfig":"220"},{"size":1822,"mtime":1631768446000,"results":"259","hashOfConfig":"220"},{"size":2481,"mtime":1631768446000,"results":"260","hashOfConfig":"220"},{"size":2484,"mtime":1631768446000,"results":"261","hashOfConfig":"220"},{"size":2514,"mtime":1631768446000,"results":"262","hashOfConfig":"220"},{"size":2597,"mtime":1631768446000,"results":"263","hashOfConfig":"220"},{"size":2090,"mtime":1631768446000,"results":"264","hashOfConfig":"220"},{"size":36897,"mtime":1632747056000,"results":"265","hashOfConfig":"220"},{"size":430,"mtime":1631768444000,"results":"266","hashOfConfig":"220"},{"size":915,"mtime":1633266706768,"results":"267","hashOfConfig":"220"},{"size":1350,"mtime":1631768444000,"results":"268","hashOfConfig":"220"},{"size":270,"mtime":1631768444000,"results":"269","hashOfConfig":"220"},{"size":2922,"mtime":1631768444000,"results":"270","hashOfConfig":"220"},{"size":991,"mtime":1632462718000,"results":"271","hashOfConfig":"220"},{"size":993,"mtime":1632738604000,"results":"272","hashOfConfig":"220"},{"size":989,"mtime":1632738599000,"results":"273","hashOfConfig":"220"},{"size":1450,"mtime":1631768446000,"results":"274","hashOfConfig":"220"},{"size":984,"mtime":1632462718000,"results":"275","hashOfConfig":"220"},{"size":985,"mtime":1632462718000,"results":"276","hashOfConfig":"220"},{"size":985,"mtime":1631768444000,"results":"277","hashOfConfig":"220"},{"size":4260,"mtime":1631768444000,"results":"278","hashOfConfig":"220"},{"size":2739,"mtime":1631768444000,"results":"279","hashOfConfig":"220"},{"size":4513,"mtime":1631768446000,"results":"280","hashOfConfig":"220"},{"size":368,"mtime":1631768446000,"results":"281","hashOfConfig":"220"},{"size":1124,"mtime":1633112389598,"results":"282","hashOfConfig":"220"},{"size":6184,"mtime":1633089164648,"results":"283","hashOfConfig":"220"},{"size":1419,"mtime":1631768444000,"results":"284","hashOfConfig":"220"},{"size":5521,"mtime":1631768444000,"results":"285","hashOfConfig":"220"},{"size":813,"mtime":1633129733914,"results":"286","hashOfConfig":"220"},{"size":403,"mtime":1632475161000,"results":"287","hashOfConfig":"220"},{"size":2467,"mtime":1631768446000,"results":"288","hashOfConfig":"220"},{"size":1135,"mtime":1631768446000,"results":"289","hashOfConfig":"220"},{"size":1695,"mtime":1631768446000,"results":"290","hashOfConfig":"220"},{"size":994,"mtime":1633171044799,"results":"291","hashOfConfig":"220"},{"size":228,"mtime":1633156112539,"results":"292","hashOfConfig":"220"},{"size":251,"mtime":1633264077189,"results":"293","hashOfConfig":"220"},{"size":1061,"mtime":1633271577349,"results":"294","hashOfConfig":"220"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},"kodvt8",{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"297"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"297"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"297"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"297"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"297"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"297"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"297"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"297"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"297"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"297"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"297"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"297"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"297"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"297"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"297"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"297"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"297"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"297"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"297"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"297"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"297"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"297"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"297"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"297"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"297"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"297"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"297"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"297"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"297"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"297"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"297"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"297"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"297"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"297"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"297"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"297"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"297"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"297"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"297"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"297"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"480"},"1r3lw23",{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"480"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"480"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"480"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"480"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"480"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"480"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"480"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"480"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"480"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"480"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"480"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"480"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"480"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"480"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"480"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"480"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"480"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"480"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"480"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"480"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"480"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"480"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"480"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"530","messages":"531","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"480"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"480"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"480"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538","usedDeprecatedRules":"480"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"480"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"480"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"480"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"480"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"480"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"480"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"480"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"480"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"480"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"480"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"480"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"480"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"480"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"480"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"480"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"480"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"480"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"480"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"577","messages":"578","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"480"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"480"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"480"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"480"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"480"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"480"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"480"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"480"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"480"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"480"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"480"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"480"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"480"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"480"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"607","usedDeprecatedRules":"480"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"480"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"480"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"480"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"480"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"480"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"480"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"480"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"480"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"626","usedDeprecatedRules":"480"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"629","usedDeprecatedRules":"480"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"480"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\index.js",[],["634","635"],"D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\reportWebVitals.js",[],"D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\App.js",[],"D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\providers\\app.js",[],"D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\reuseable\\Loader.js",["636"],"import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction Loader() {\n    const showLoader = useSelector(state => state.auth.showLoader);\n    if( !showLoader )\n        return <div></div>\n    \n    return (\n        <div className=\"loaderWrapper\">\n          <div className=\"loading\">\n            <div className=\"dot\"></div>\n            <div className=\"dot\"></div>\n            <div className=\"dot\"></div>\n            <div className=\"dot\"></div>\n            <div className=\"dot\"></div>\n          </div>\n        </div>\n    )\n}\n\nexport default Loader;\n","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\navigations\\default-navigation.js",[],"D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\error-handling\\ErrorBoundary.js",[],"D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\navigations\\auth-navigation.js",[],"D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\constants\\RouteNames.js",[],"D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\auth\\Login.js",[],"D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\auth\\RegeneratePassword.js",[],"D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\FallBackLoader.js",[],"D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\dashboard\\Dashboard.js",["637","638","639","640","641","642"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector } from 'react-redux';\nimport { Redirect } from \"react-router\";\nimport { toast } from \"react-toastify\";\nimport DefaultStructure from \"../../layouts/defaultStructure\";\nimport { getQueryChart, getReports } from \"../../store/actions/dashboard\";\nimport TotalCard from \"./components/TotalCard\";\n\nconst Dashboard = () => {\n\n    const [isLoading, setIsLoading] = useState(false);\n    const user = useSelector(state => state.auth.user);\n    const [totalUser, setTotalUser] = useState(0);\n    const [totalNewUser, setTotalNewUser] = useState(0);\n    const [totalInActiveUser, setTotalInActiveUser] = useState(0);\n\n    const [redirect, setRedirect] = useState( false );\n    const userReauthenticate = ({ message }) =>{\n        toast.error(message, {\n            onOpen: () => setRedirect( true ) \n        });\n    }\n\n    useEffect(()=>{\n        _loadReports();\n    },[]);\n\n    const _loadReports = (filter = {}) =>{\n        setIsLoading(true);\n        getReports(filter).then(res => {\n            setIsLoading(false);\n            if( !res.error ){\n                const { data } = res;\n                \n                if(data){\n                    setTotalUser(data.totaluser);\n                    setTotalNewUser(data.totalnewuser);\n                }\n            }\n            if( res.redirect )\n                userReauthenticate( res );\n        })\n    }\n\n    const _submitHandler = (data) => {\n        const { from_date, to_date } = data;\n        _loadReports({from_date : from_date.value, to_date: to_date.value});\n    }\n\n    const _resetFilterHandler = () => {\n        _loadReports();\n    }\n\n    const _refreshData = () =>{\n        _loadReports();\n    }\n\n    if( redirect )\n        return <Redirect to=\"/login\"/>\n\n    //console.log(user);\n\n    return (\n        <DefaultStructure pageTitle={`Welcome  ${user && user.first_name} ${user && user.last_name}`}>\n            <div className=\"dashboard_main\">\n                <h2 className=\"titld\">Dashboard</h2>\n                <div className=\"dashboard_card user_card_holder\">\n                    <div className={isLoading ? \"user_card b-color1 isload\" : \"user_card b-color1\"}>\n                        <span className=\"usercrd_ico color1\">\n                            <img src={require('../../assets/images/group.png').default} alt=\"user\" />\n                        </span>\n                        <TotalCard \n                            title=\"Total active user\"\n                            data={totalUser}\n                        />\n                        \n                    </div>\n\n                    <div className={isLoading ? \"user_card b-color2 isload\" : \"user_card b-color2\"}>\n                        <span className=\"usercrd_ico color2\">\n                            <img src={require('../../assets/images/add-group.png').default} alt=\"user\" />\n                        </span>\n                        <TotalCard \n                            title=\"Total new user\"\n                            data={totalNewUser}\n                        />\n                    </div>\n\n                    <div className={isLoading ? \"user_card b-color8 isload\" : \"user_card b-color8\"}>\n                        <span className=\"usercrd_ico color8\">\n                            <img src={require('../../assets/images/sad-sleepy-emoticon-face-square.png').default} alt=\"user\" />\n                        </span>\n                        <TotalCard \n                            title=\"Total inactive user\"\n                            data={totalInActiveUser}\n                        />\n                    </div>\n                </div>\n            </div>\n        </DefaultStructure>\n    )\n};\n\nexport default Dashboard;","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\users-admin\\UsersList.js",["643"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { RouteNames } from '../../constants/RouteNames';\nimport BaseList from '../../reuseable/BaseList';\nimport Item from './components/Item';\nimport { getUsers } from '../../store/actions/user';\nimport { toggleLoader } from '../../store/actions/auth';\nimport { Redirect } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport BasePagination from '../../reuseable/BasePagination';\n\nfunction UserList() {\n    const HeadingTitle = [\n        'First Name',\n        'Last Name',\n        'Email',\n        'Phone',\n        'Role',\n        'aciton'\n    ];\n    \n    const [ users, setUsers ] = useState( [] );\n    const dispatch = useDispatch();\n    const [pageInfo, setPageInfo] = useState({});\n    const [redirect, setRedirect] = useState( false );\n    const userReauthenticate = ({ message }) =>{\n        toast.error(message, {\n            onOpen: () => setRedirect( true ) \n        });\n    }\n\n    useEffect(() => {\n        \n        _loadMoreItems();\n\n    }, []);\n\n    const _loadMoreItems = (filter = {}) =>{\n        dispatch( toggleLoader( true ) );\n        getUsers({ ...filter, roles:[\"super_admin\",\"admin\"] }).then( response => {\n            dispatch( toggleLoader( false ) );\n            if( !response.error ){\n                setUsers( response.data.data );\n                if( response.data.extra )\n                    setPageInfo(response.data.extra);\n            }\n            if( response.redirect )\n                userReauthenticate( response );\n        });\n    }\n\n    //console.log(users);\n\n    if( redirect )\n        return <Redirect to=\"/login\"/>\n    \n    return (\n        <BaseList \n            addButton={RouteNames.adminUserAdd}\n            listHeading={HeadingTitle}\n            pageTitle='Admin User List'\n            pagination={<BasePagination\n                pages={pageInfo}\n                onPaginate={_loadMoreItems}\n            />}\n        >\n            { users.length > 0 ? users.map(user => <Item key={user._id} data={user} />)\n                : <tr>\n                        <td colSpan={6} className=\"text-center\">\n                            <span className=\"name\">No Data found</span>\n                        </td> \n                    </tr>\n            }\n        </BaseList>\n    )\n}\n\nexport default UserList\n","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\users-admin\\UserEdit.js",["644","645","646","647","648","649","650","651","652","653"],"import React, { useState, useEffect } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { useDispatch } from 'react-redux';\nimport { RouteNames } from '../../constants/RouteNames';\nimport DefaultStructure from '../../layouts/defaultStructure';\nimport BaseForm from '../../reuseable/base-form';\nimport useForm from '../../reuseable/hooks/useForm';\nimport { getUserById, addNewUser, updateUser, getBranches } from '../../store/actions/user';\nimport { getCities } from '../../store/actions/master';\nimport { toggleLoader } from '../../store/actions/auth';\nimport Bredcrumb from '../../reuseable/Bredcrumb';\nimport BaseImageList from '../../reuseable/BaseImageList';\n\nconst FILE_TYPES = ['image/jpeg','image/png', 'image/jpeg'];\n\nconst UserEdit = (props) => {\n    const { id } = useParams();\n    const dispatch = useDispatch();\n    const [ redirectToList, setRedirectToList ] = useState( false );\n    const [ cities, setCities ] = useState( [] );\n    const [ branches, setBranches] = useState( [] );\n    const [isUploading, setIsUploading] = useState(false);\n    const [images, setImages] = useState([]);\n    const [ isSubmitBtnPressed, setIsSubmitBtnPressed ] = useState( false );\n\n    const [redirect, setRedirect] = useState( false );\n    const userReauthenticate = ({ message }) =>{\n        toast.error(message, {\n            onOpen: () => setRedirect( true ) \n        });\n    }\n\n    const formFields = {\n        first_name: {\n            value: '',\n            isValid: false,\n            isTouched: false\n        },\n        last_name: {\n            value: '',\n            isValid: false,\n            isTouched: false\n        },\n        email: {\n            value: '',\n            isValid: false,\n            isTouched: false\n        },\n        phone: {\n            value: '',\n            isValid: false,\n            isTouched: false\n        },\n        role: {\n            value: '',\n            isValid: false,\n            isTouched: false\n        },\n        // profile_picture: {\n        //     value: '',\n        //     isValid: false,\n        //     isTouched: false\n        // },\n        is_active: {\n            value: false,\n            isValid: true,\n            isTouched: true\n        }\n        \n    };\n\n    const [state, inputHandler, _, updateForm ] = useForm(\n        formFields,\n        false\n    );\n\n    const _setFormData = ( data ) =>{\n        //let formatedData = {};\n        for( const _k in data ){\n            formFields[_k] = {\n                value: data[_k],\n                isValid: true,\n                isTouched: true\n            }\n\n            if( _k === 'profile_picture'){\n                setImages([ data[_k] ]);\n            }\n        }\n\n        return formFields;\n    }\n\n    const _setSubmitableData = ( data ) =>{\n        let formData = {};\n\n        for( const k in data ){\n            if( data[k].value )\n                formData[k] = data[k].value;\n        }\n    \n        return formData;\n    }\n\n    useEffect(()=>{\n\n        if( id ){\n            dispatch( toggleLoader( true ) );\n            getUserById( id ).then(\n                response => {\n                    dispatch( toggleLoader( false ) );\n                    if( !response.error ){\n                        updateForm( _setFormData( response.data ), true);\n                    }\n                    if( response.redirect )\n                        userReauthenticate( response );\n                }\n            );\n        }\n    },[id]);\n\n    //console.log( state );\n\n    const uploadImageHandler = (ev) =>{\n\n        const fileData = ev.target.files[0];\n        console.log(fileData);\n        if( fileData ){\n            const _i = ev.target.getAttribute('index');\n            document.getElementById(`img_upload_${_i}`).classList.add('imguploading');\n            \n            const { type } = fileData;\n            //console.log(type);\n            if( type && FILE_TYPES.includes(type)){\n                                \n                const formData = new FormData();\n                formData.append('packaging_file',fileData);\n                formData.append('product_type', 'profile_picture');\n                // uploadImage(formData).then(res => {\n                    \n                //     if(!res.error){\n                //         const { Location } = res.data;\n                //         if( Location ){\n                //             setImages(prevImages => [...prevImages, Location]);\n                //             inputHandler('profile_picture', Location);\n                //             ev.target.disabled = true;\n                //             document.getElementById(`img_upload_${_i}`).classList.remove('imguploading');\n                //             document.getElementById(`img_upload_${_i}`).classList.add('imgupdone');\n                //         }\n                //     }\n                // })  \n            \n            }else{\n                document.getElementById(`img_upload_${_i}`).classList.remove('imguploading');\n                toast.error('Only Image file can be uploaded here.');\n            }\n        }\n        \n    }\n\n    const _removeImageHandler = ( index ) =>{\n        \n        setImages([]);\n        inputHandler('profile_picture', '');\n        const _upload = document.getElementById('img_uploadbtn_1');\n        _upload.disabled = false;\n        _upload.value = \"\";\n        document.getElementById(`img_upload_1`).classList.remove('imgupdone');\n    \n    }\n\n    const handleFormSubmit = (ev) =>{\n        \n        ev.preventDefault();\n        setIsSubmitBtnPressed( true );\n        const { inputs, formValidity } = state;\n        console.log( inputs );\n        if( formValidity ){\n            dispatch( toggleLoader( true ) );\n            if( !id )\n                addNewUser(_setSubmitableData( inputs )).then(result => {\n                    if( !result.error ){\n                        dispatch( toggleLoader( false ) );\n                        toast.success( result.message, \n                            { onOpen: () => setRedirectToList( true ) }\n                        );\n                    }else{\n                        dispatch( toggleLoader( false ) );\n                        toast.error( result.message ); \n                    }\n                    if( result.redirect )\n                        userReauthenticate( result );\n                });\n\n            if( id )\n                updateUser(_setSubmitableData( inputs )).then(result => {\n                    if( !result.error ){\n                        dispatch( toggleLoader( false ) );\n                        toast.success( result.message, \n                            { onOpen: () => setRedirectToList( true ) }\n                        );\n                    }else{\n                        dispatch( toggleLoader( false ) );\n                        toast.error( result.message ); \n                    }\n                    if( result.redirect )\n                        userReauthenticate( result );\n                });\n        }\n    }\n\n    const FormHandler = () =>{\n        return (\n            <div className=\"submitdiv\">\n                <input type=\"submit\" name=\"\" value=\"submit\" onClick={handleFormSubmit}/>\n            </div>\n        );\n    }\n\n    //console.log(state.inputs);\n\n    if( redirect )\n        return <Redirect to=\"/login\"/>\n\n    if( redirectToList )\n        return (\n            <Redirect to={RouteNames.adminUserList}/>\n        )\n\n    return (\n        <DefaultStructure pageTitle='Admin User Add/Edit Form'>\n            <Bredcrumb \n                leading={{title: 'Admin User', url: RouteNames.adminUserList }}\n                trailing={{title: 'Add-Edit Form', url: '#'}}\n            />\n            <BaseForm buttonSection={<FormHandler/>}>\n                <div className=\"form-group\">\n                    <label>First Name<em>*</em></label>\n                    <input \n                        type=\"text\" \n                        name=\"\"\n                        value={state.inputs.first_name.value}\n                        onChange={(e) => inputHandler('first_name', e.target.value)}\n                        //onBlur={() => touchHandler('name') }\n                    />\n                    { !state.formValidity && isSubmitBtnPressed && state.inputs.first_name.value === '' &&\n                        <span className=\"invalid\">First name is required field.</span>\n                    }\n                </div>\n                <div className=\"form-group\">\n                    <label>Last Name<em>*</em></label>\n                    <input \n                        type=\"text\" \n                        name=\"\"\n                        value={state.inputs.last_name.value}\n                        onChange={(e) => inputHandler('last_name', e.target.value)}\n                        //onBlur={() => touchHandler('name') }\n                    />\n                    { !state.formValidity && isSubmitBtnPressed && state.inputs.last_name.value === '' &&\n                        <span className=\"invalid\">Last name is required field.</span>\n                    }\n                </div>\n                <div className=\"form-group\">\n                    <label>Email<em>*</em></label>\n                    <input \n                        type=\"text\" \n                        name=\"\"\n                        value={state.inputs.email.value}\n                        onChange={(e) => inputHandler('email', e.target.value)}\n                        //onBlur={() => touchHandler('name') }\n                    />\n                    { !state.formValidity && isSubmitBtnPressed && state.inputs.email.value === '' &&\n                        <span className=\"invalid\">Email is required field.</span>\n                    }\n                </div>\n                <div className=\"form-group\">\n                    <label>Phone Number<em>*</em></label>\n                    <input \n                        type=\"number\" \n                        name=\"\"\n                        value={ state.inputs.phone.value }\n                        onChange={(e) => inputHandler('phone', e.target.value)}\n                        //onBlur={() => touchHandler('name') }\n                    />\n                    { !state.formValidity && isSubmitBtnPressed && state.inputs.phone.value === '' && \n                        <span className=\"invalid\">Phone number is required field.</span>\n                    }\n                </div>\n                <div className=\"form-group\">\n                    <label>Select Role<em>*</em></label>\n                    <select\n                        value={state.inputs.role.value.slug}\n                        onChange={(e) => inputHandler('role', e.target.value)}\n                    >\n                        <option value=\"\">Select Role</option>\n                        <option value=\"super_admin\">Super admin</option>\n                        <option value=\"admin\">Admin</option>\n                    </select>\n                    { !state.formValidity && isSubmitBtnPressed && state.inputs.role.value === '' && \n                        <span className=\"invalid\">Role is required field.</span>\n                    }\n                </div>\n                <div className=\"form-group\">\n                    <label>Upload Profile Image<em>*</em></label>\n                    <div className=\"upload-img-hlder\">\n\n                        <label id={`img_upload_1`} className={isUploading ? \"load_check imgupdone\" : \"load_check\"}></label>\n                            {/*<input\n                                index={1} \n                                type=\"file\" \n                                id={`img_uploadbtn_1`}\n                                onChange={uploadImageHandler}\n                            />*/}\n                        <label className=\"imgupload_btn\" htmlFor={`img_uploadbtn_1`}></label>\n                    </div>\n                    {!state.formValidity && isSubmitBtnPressed && state.inputs.profile_picture.value === '' &&\n                        <span className=\"invalid\">File (Image) is required field.</span>\n                    }\n                </div>\n                <div className=\"form-group imgPrevSection\">\n                    <BaseImageList onRemove={_removeImageHandler} imageList={images}/>\n                </div>\n                <div className=\"form-group\">\n                    <label>Is Active</label>\n                    <select\n                        value={state.inputs.is_active.value}\n                        onChange={(e) => inputHandler('is_active', e.target.value)}\n                    >\n                        <option value={true}>Yes</option>\n                        <option value={false}>No</option>\n                    </select>\n                    { !state.formValidity && isSubmitBtnPressed && state.inputs.is_active.value === '' && \n                        <span className=\"invalid\">It is required field.</span>\n                    }\n                </div>\n            </BaseForm>\n        </DefaultStructure>\n    )\n}\n\nexport default UserEdit;\n","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\404\\NotFound.js",[],"D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\error-handling\\components\\Error.js",["654"],"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Error(props) {\n    return (\n    \t<div className=\"errorholder\">\n        \t\t<h1>Something went wrong.</h1>\n                <h3>Please contact to Admin</h3>\n        </div>\n    );\n}\n\nexport default Error;\n","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\user-chat\\Chat.js",["655"],"import React, { useEffect, useState } from 'react';\nimport { Redirect, useParams } from \"react-router-dom\";\nimport { useDispatch } from 'react-redux';\nimport { RouteNames } from '../../constants/RouteNames';\nimport DefaultStructure from '../../layouts/defaultStructure';\nimport Bredcrumb from '../../reuseable/Bredcrumb';\nimport ChatRoom from './components/ChatRoom';\nimport { toggleLoader } from '../../store/actions/auth';\nimport { getUserChatingRoom, startChatRoom } from '../../store/actions/chat';\nimport { toast } from 'react-toastify';\n\nfunction UserChat() {\n\n    const { id } = useParams();\n    const dispatch = useDispatch();\n    const [userChats, setUserChats] = useState([]);\n    const [currentChat, setCurrentChat] = useState({});\n    const [isActive, setIsActive] = useState(false);\n    const [roomId, setRoomId] = useState(null);\n    const [currentUserName, setCurrentUserName] = useState('');\n    const [currentUserPic, setCurrentUserPic] = useState(null);\n    //const [search, setSearch] = useState('');\n\n    const [redirect, setRedirect] = useState(false);\n\n    const userReauthenticate = ({ message }) => {\n        toast.error(message, {\n            onOpen: () => setRedirect(true)\n        });\n    }\n\n    useEffect(() => {\n        dispatch(toggleLoader(true));\n        getUserChatingRoom(id).then(res => {\n            dispatch(toggleLoader(false));\n            if (!res.error) {\n                if (res.data && res.data.length > 0)\n                    setUserChats(res.data);\n                if (res.data && res.data.length > 0 && res.data[0] && res.data[0].chats) {\n                    \n                    const { is_active, chats, user } = res.data[0];\n                    setCurrentChat(is_active ? chats : []);\n                    setCurrentUserName(user && user.first_name && user.last_name ? `${user.first_name} ${user.last_name}` : '');\n                    setCurrentUserPic(user && user.profile_picture ? user.profile_picture : null);\n\n                }\n                startChatRoom(id).then(resp => {\n\n                    if (!resp.error) {\n\n                        const { data } = resp.data;\n                        setRoomId(data && data._id ? data._id : null);\n                        setIsActive(data && data.is_active ? data.is_active : false);\n\n                    }\n\n                })\n            }\n            if (res.redirect)\n                userReauthenticate(res);\n\n        });\n\n    }, []);\n\n    //console.log(userChats);\n\n    const _currentItemHandler = (userData) => {\n        //console.log('CU', userData);\n        setRoomId(userData._id);\n        setCurrentChat(userData.chats && userData.chats.length > 0 ? userData.chats : []);\n        setIsActive(userData.is_active);\n        setCurrentUserName(userData.user && userData.user.first_name && userData.user.last_name ? `${userData.user.first_name} ${userData.user.last_name}` : '');\n        setCurrentUserPic(userData.user && userData.user.profile_picture ? userData.user.profile_picture : null);\n    }\n\n    if (redirect)\n        return <Redirect to=\"/login\" />\n\n    return (\n        <DefaultStructure pageTitle='User Chat Section'>\n            <Bredcrumb\n                leading={{ title: 'User Chat List', url: RouteNames.userChatList }}\n                trailing={{ title: 'Chat', url: '#' }}\n            />\n\n            <div className=\"user-chat-hlder\">\n                <div className=\"cht-list-hlder\">\n                    <div className=\"cht-list-header\">\n                        {/* <input\n                            type=\"search\"\n                            placeholder=\"Search chat\"\n                            value={search}\n                            onChange={_chatListSearchHandler}\n                        /> */}\n                    </div>\n                    <ul className=\"cht-list-ul\">\n                        {\n                            userChats && userChats.length > 0 && userChats.map((uChat, index) =>\n                                <ChatRoom.SearchItem\n                                    onClick={_currentItemHandler}\n                                    key={index}\n                                    chatData={uChat}\n                                />\n                            )\n                        }\n                    </ul>\n\n                </div>\n                <ChatRoom.Message\n                    chat={currentChat}\n                    roomId={roomId}\n                    activeChat={isActive}\n                    currentUserName={currentUserName}\n                    currentUserPic={currentUserPic}\n                    appUser={id}\n                />\n            </div>\n\n        </DefaultStructure>\n    )\n}\n\nexport default UserChat;\n","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\global-notifications\\GlobalNotifications.js",["656","657","658"],"import React, {useState, useEffect} from 'react';\nimport { useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { toggleLoader } from '../../store/actions/auth';\nimport { Redirect } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport DefaultStructure from '../../layouts/defaultStructure';\nimport { getUsers, sendNotification } from '../../store/actions/globalNotification';\nimport Filter from './components/Filter';\nimport UserList from './components/UserList';\n\nfunction GlobalNotifications(props) {\n    \n    const dispatch = useDispatch();\n    const [redirect, setRedirect] = useState( false );\n    const [users, setUsers] = useState([]);\n    const [clearData, setClearData] = useState( false );\n    const [data, setData] = useState({\n        user_ids: [],\n        notification_text: ''\n    });\n    \n    const userReauthenticate = ({ message }) =>{\n        toast.error(message, {\n            onOpen: () => setRedirect( true ) \n        });\n    }\n\n    const _notificationHandler = ({ target: { value }}) =>{\n        setData(prevData => ({\n            ...prevData,\n            notification_text: value\n        }));\n    }\n\n    const _filterAppUser = (filterData) =>{\n        dispatch( toggleLoader( true ) );\n        getUsers(filterData).then(res => {\n            dispatch( toggleLoader( false ) );\n            if(!res.error){\n                setUsers( res.data );\n            }\n        })\n    }\n\n    const _onSelection = (data) =>{\n        setData(prevData => ({\n            ...prevData,\n            user_ids: [ ...data ]\n        }));\n    }\n\n    const _clearData = () => {\n        setClearData( true );\n        setData({\n            user_ids: [],\n            notification_text: ''\n        });\n        setUsers([]);\n    }\n\n    const _submitHandler = (ev) =>{\n        if( data.user_ids.length > 0 ){\n            if(data.notification_text !== ''){\n                dispatch( toggleLoader( true ) );\n                sendNotification(data).then(res => {\n                    dispatch( toggleLoader( false ) );\n                    if( !res.error ){\n                        toast.success('Notification sent successfully.', {\n                            onOpen : () => _clearData()\n                        });\n\n                    }\n                })\n            }\n            else\n                toast.error('Notification text is required.'); \n        }else{\n            toast.error('At-lest one user need to be selected.');\n        }\n    }\n    \n    if( redirect )\n        return <Redirect to=\"/login\"/>\n    \n\n    return (\n        <DefaultStructure pageTitle=\"Global Notification\">\n            <div className=\"activity_filter_wrp notification-frm-filter\">\n                <Filter onFilter={_filterAppUser} clearData={clearData}/>\n                <div className=\"form-inline two-fold\">\n                    <div className=\"form-group\">\n                        <textarea \n                            placeholder=\"Notification Text Box\"\n                            value={data.notification_text}\n                            onChange={_notificationHandler}\n                        ></textarea>\n                    </div>\n\n                    <div className=\"form-group\">\n                    <input \n                            type=\"submit\" \n                            value=\"Send\" \n                            className=\"commn-btn\"\n                            onClick={_submitHandler}\n                        />\n                    </div>\n                </div>\n               \n            </div>\n\n            <UserList users={users} onSelect={_onSelection} clearData={clearData}/>   \n            \n        </DefaultStructure>\n    )\n}\n\nexport default GlobalNotifications;\n","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\user-chat\\List.js",["659","660"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport BaseList from '../../reuseable/BaseList';\nimport { RouteNames } from '../../constants/RouteNames';\nimport Item from './components/Item';\nimport { getStatus } from '../../store/actions/master';\nimport { toggleLoader } from '../../store/actions/auth';\nimport { Redirect } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport BasePagination from '../../reuseable/BasePagination';\nimport { getUserActiveChats } from '../../store/actions/chat';\n\nfunction UserChatList(props) {\n\n    const HeadingTitle = [\n        'User Name',\n        'Chat Type',\n        'Is Active',\n        'aciton'\n    ];\n    const [status, setStatus] = useState([]);\n    const [userChats, setUserChats] = useState([]);\n    const [pageInfo, setPageInfo] = useState({});\n    const dispatch = useDispatch();\n\n    const [redirect, setRedirect] = useState(false);\n    const userReauthenticate = ({ message }) => {\n        toast.error(message, {\n            onOpen: () => setRedirect(true)\n        });\n    }\n\n    useEffect(() => {\n        dispatch(toggleLoader(true));\n        getStatus().then(resp => {\n            dispatch(toggleLoader(false));\n            if (!resp.error) {\n                setStatus(resp.data);\n                _loadMoreItems();\n            }\n            if (resp.redirect)\n                userReauthenticate(resp);\n        });\n    }, []);\n\n    const _loadMoreItems = (filter = {}) => {\n        dispatch(toggleLoader(true));\n        //console.log(filter);\n        getUserActiveChats(filter).then(response => {\n            dispatch(toggleLoader(false));\n            //console.log('RR ====== ', response );\n            if (!response.error) {\n                setUserChats(response.data.data);\n                if( response.data.extra )\n                    setPageInfo(response.data.extra);\n            }\n            if (response.redirect)\n                userReauthenticate(response);\n        });\n    }\n\n    if (redirect)\n        return <Redirect to=\"/login\" />\n\n    return (\n        <BaseList\n            //addButton={RouteNames.userChat}\n            listHeading={HeadingTitle}\n            pageTitle='User Chat List'\n            pagination={<BasePagination\n                pages={pageInfo}\n                onPaginate={_loadMoreItems}\n            />}\n        >\n            { userChats.length > 0 ? userChats.map(consign => <Item status={status} key={consign._id} data={consign} />)\n                : <tr>\n                    <td colSpan={10} className=\"text-center\">\n                        <span className=\"name\">No Data found</span>\n                    </td>\n                </tr>\n            }\n        </BaseList>\n    )\n}\n\nexport default UserChatList;\n","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\store\\reducers\\auth.js",["661","662"],"import { ACTIVE_LINK_UPDATE, ADJUST_LOADER, LOGIN_USER, LOGOUT_USER, SIDE_BAR_UPDATE, UPDATE_NOTIFICATION_SOCKET } from \"../actions/auth\";\n\nconst userData = JSON.parse(localStorage.getItem('userData'));\n\nconst initState = {\n    token: userData && userData.token ? userData.token : null,\n    user: userData && userData.user ? userData.user : {},\n    isAuthenticated: userData && userData.token ? !!userData.token : false,\n    showLoader: false,\n    updateSocket: false,\n    activeLink: 'dashboard',\n    sideBarStatus: true,\n}\n\nexport default (state = initState, action) => {\n    switch (action.type) {\n\n        case LOGIN_USER:\n            //====== Store to Local ========\n            localStorage.setItem('userData',\n                JSON.stringify({ user: action.data, token: action.token })\n            );\n\n            return {\n                token: action.token,\n                user: action.data,\n                isAuthenticated: !!action.token\n            };\n\n        case LOGOUT_USER:\n            //============ Clear Local Storage ==========\n            localStorage.clear();\n            return {\n                token: null,\n                user: {},\n                isAuthenticated: false\n            };\n\n        case ADJUST_LOADER:\n            return {\n                ...state,\n                showLoader: action.status\n            }\n\n        case UPDATE_NOTIFICATION_SOCKET:\n            return {\n                ...state,\n                updateSocket: action.status\n            }\n\n        case ACTIVE_LINK_UPDATE:\n            return {\n                ...state,\n                activeLink: action.link\n            }\n\n        case SIDE_BAR_UPDATE:\n            return {\n                ...state,\n                sideBarStatus: action.status\n            }\n    }\n\n    return state;\n}","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\store\\reducers\\master.js",["663"],"const initState = {\n    shippingLine: [],\n    materialType:[],\n    weightUnit: [],\n    containerSize: [],\n    dispatchMedium: [],\n    branch: [],\n    status: [],\n    notifications:[],\n    alertMessages: [],\n}\n\nexport default (state = initState, action) =>{\n    switch( action.type ){\n\n    }\n\n    return state;\n}","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\states\\StateEdit.js",["664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680"],"import React, { useState, useEffect } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { useDispatch } from 'react-redux';\nimport { RouteNames } from '../../../constants/RouteNames';\nimport DefaultStructure from '../../../layouts/defaultStructure';\nimport BaseForm from '../../../reuseable/base-form';\nimport useForm from '../../../reuseable/hooks/useForm';\nimport { addBranch, getBranchById, updateBranch, getStates, getCitiesByState,addStates,getStatesById, updateState } from '../../../store/actions/master';\nimport { toggleLoader } from '../../../store/actions/auth';\nimport Bredcrumb from '../../../reuseable/Bredcrumb';\n\nconst StateEdit = (props) => {\n    const { id } = useParams();\n    const dispatch = useDispatch();\n    const [redirectToList, setRedirectToList] = useState(false);\n    const [loadState, setLoadState] = useState(false);\n    const [loadCity, setLoadCity] = useState(false);\n    const [states, setStates] = useState([]);\n    const [cities, setCities] = useState([]);\n    const [isSubmitBtnPressed, setIsSubmitBtnPressed] = useState(false);\n\n    const [redirect, setRedirect] = useState(false);\n    const userReauthenticate = ({ message }) => {\n        toast.error(message, {\n            onOpen: () => setRedirect(true)\n        });\n    }\n\n    const [state, inputHandler, _, updateForm] = useForm(\n        {\n            name: {\n                value: '',\n                isValid: false,\n                isTouched: false\n            },\n            state_code: {\n                value: '',\n                isValid: false,\n                isTouched: false\n            }\n        },\n        false\n    );\n\n    const _setFormData = (data) => {\n        let formatedData = {};\n        for (const _k in data) {\n            formatedData[_k] = {\n                value: data[_k],\n                isValid: true,\n                isTouched: true\n            }\n        }\n\n        return formatedData;\n    }\n\n    const _setSubmitableData = (data) => {\n        let formData = {};\n\n        for (const k in data) {\n            formData[k] = data[k].value;\n        }\n\n        return formData;\n    }\n\n    useEffect(() => {\n        //setLoadState(true);\n        /* getStates().then(resp => {\n            setStates(resp.data);\n            setLoadState(false);\n        }) */\n\n        if (id) {\n            dispatch(toggleLoader(true));\n\n            getStatesById(id).then(\n                response => {\n                    dispatch(toggleLoader(false));\n                    if (!response.error) {\n                        updateForm(_setFormData(response.data), true);\n                        if( response.data.state_id ){\n                            //setLoadCity(true);\n                            //__loadCities(response.data.state_id);\n                        }\n                        \n                    }\n                    if (response.redirect)\n                        userReauthenticate(response);\n                }\n            ).catch(error => {\n                console.log(error);\n            });\n        }\n    }, [id]);\n\n    //console.log(state.inputs);\n\n    const handleFormSubmit = (ev) => {\n\n        ev.preventDefault();\n        setIsSubmitBtnPressed(true);\n        const { inputs, formValidity } = state;\n        if (formValidity) {\n            dispatch(toggleLoader(true));\n            if(!id){\n                addStates(_setSubmitableData(inputs)).then(result => {\n                    if (!result.error) {\n                        dispatch(toggleLoader(false));\n                        toast.success(result.message,\n                            { onOpen: () => setRedirectToList(true) }\n                        );\n                    }\n                    if (result.redirect)\n                        userReauthenticate(result);\n                });\n            }\n            if(id){\n                updateState(_setSubmitableData(inputs)).then(result => {\n                    if (!result.error) {\n                        dispatch(toggleLoader(false));\n                        toast.success(result.message,\n                            { onOpen: () => setRedirectToList(true) }\n                        );\n                    }\n                    if (result.redirect)\n                        userReauthenticate(result);\n                });\n            }\n           /*  if (!id)\n                addBranch(_setSubmitableData(inputs)).then(result => {\n                    if (!result.error) {\n                        dispatch(toggleLoader(false));\n                        toast.success(result.message,\n                            { onOpen: () => setRedirectToList(true) }\n                        );\n                    }\n                    if (result.redirect)\n                        userReauthenticate(result);\n                });\n\n            if (id)\n                updateBranch(_setSubmitableData(inputs)).then(result => {\n                    if (!result.error) {\n                        dispatch(toggleLoader(false));\n                        toast.success(result.message,\n                            { onOpen: () => setRedirectToList(true) }\n                        );\n                    }\n                    if (result.redirect)\n                        userReauthenticate(result);\n                }); */\n        }\n    }\n\n    const FormHandler = () => {\n        return (\n            <div className=\"submitdiv\">\n                <input type=\"submit\" name=\"\" value=\"submit\" onClick={handleFormSubmit} />\n            </div>\n        );\n    }\n\n    const _handleState = ({ target: { value } }) => {\n        /* setLoadCity(true);\n        inputHandler('state_id', value);\n        __loadCities(value); */\n    }\n\n    const __loadCities = (stateId) => {\n       /*  getCitiesByState(stateId).then(resp => {\n            if (resp.data)\n                setCities(resp.data);\n            setLoadCity(false);\n        }).catch(error => {\n            setLoadCity(false);\n        }) */\n    }\n\n    if (redirect)\n        return <Redirect to=\"/login\" />\n\n    if (redirectToList)\n        return (\n            <Redirect to={RouteNames.stateList} />\n        )\n\n    return (\n        <DefaultStructure pageTitle='State Add/Edit Form'>\n            <Bredcrumb\n                leading={{ title: 'State List', url: RouteNames.stateList }}\n                trailing={{ title: 'Add-Edit Form', url: '#' }}\n            />\n            <BaseForm buttonSection={<FormHandler />}>\n                <div className=\"form-group\">\n                    <label>Name <em>*</em></label>\n                    <input\n                        type=\"text\"\n                        name=\"\"\n                        value={state.inputs.name.value}\n                        onChange={(e) => inputHandler('name', e.target.value)}\n                    //onBlur={() => touchHandler('name') }\n                    />\n                    {!state.formValidity && isSubmitBtnPressed && state.inputs.name.value === '' &&\n                        <span className=\"invalid\">Name is required field.</span>\n                    }\n                </div>\n\n                <div className=\"form-group\">\n                    <label>State Code <em>*</em></label>\n                    <input\n                        type=\"text\"\n                        name=\"\"\n                        value={state.inputs.state_code.value}\n                        onChange={(e) => inputHandler('state_code', e.target.value)}\n                    //onBlur={() => touchHandler('name') }\n                    />\n                    {!state.formValidity && isSubmitBtnPressed && state.inputs.state_code.value === '' &&\n                        <span className=\"invalid\">State Code is required field.</span>\n                    }\n                </div>\n                \n            </BaseForm>\n        </DefaultStructure>\n    )\n}\n\nexport default StateEdit;\n","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\states\\StateList.js",["681"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { RouteNames } from '../../../constants/RouteNames';\nimport BaseList from '../../../reuseable/BaseList';\nimport Item from './components/Item';\nimport { getStates } from '../../../store/actions/master';\nimport { toggleLoader } from '../../../store/actions/auth';\nimport { Redirect } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport BasePagination from '../../../reuseable/BasePagination';\n\nfunction StateList() {\n    const HeadingTitle = [\n        'Name',\n        'aciton'\n    ];\n\n    const [getstates, setStates] = useState([]);\n    const dispatch = useDispatch();\n    const [pageInfo, setPageInfo] = useState({});\n\n    const _loadMoreItems = (filter = {}) => {\n        dispatch(toggleLoader(true));\n        getStates(filter).then(response => {\n            dispatch(toggleLoader(false));\n            if (!response.error){\n                setStates(response.data);\n                if( response.data.extra )\n                    setPageInfo(response.data.extra);\n            }\n            if (response.redirect)\n                userReauthenticate(response);\n        });\n    }\n\n    const [redirect, setRedirect] = useState(false);\n    const userReauthenticate = ({ message }) => {\n        toast.error(message, {\n            onOpen: () => setRedirect(true)\n        });\n    }\n\n    useEffect(() => {\n        _loadMoreItems();\n    }, []);\n\n    //console.log(branches);\n\n    if (redirect)\n        return <Redirect to=\"/login\" />\n\n    return (\n        <BaseList\n            addButton={RouteNames.stateAdd}\n            listHeading={HeadingTitle}\n            pageTitle='States'\n            pagination={<BasePagination\n                pages={pageInfo}\n                onPaginate={_loadMoreItems}\n            />}\n        >\n            { getstates.length > 0 ? getstates.map(stateval => <Item key={stateval._id} data={stateval} />)\n                : <tr>\n                    <td colSpan={6} className=\"text-center\">\n                        <span className=\"name\">No Data found</span>\n                    </td>\n                </tr>\n            }\n        </BaseList>\n    )\n}\n\nexport default StateList\n","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\reuseable\\BasePagination.js",["682","683","684","685"],"import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst MAX_PAGE_SHOW = 5;\n\nfunction BasePagination({ pages, onPaginate }) {\n\n    if (Object.keys(pages).length <= 0)\n        return null;\n\n    const { page, totalPages } = pages;\n\n    const _onPageClickHandler = (ev, data) => {\n        ev.preventDefault();\n        if (data.isPrev && page > 1) {\n            onPaginate({ skip: page - 1 });\n            return;\n        }\n        if (data.isNext && page < totalPages) {\n            onPaginate({ skip: page + 1 });\n            return;\n        }\n        else {\n            onPaginate({ skip: data._p })\n        }\n    }\n\n    const _Link = ({ onClick, title }) => {\n        return (\n            <Link\n                to=\"#\"\n                onClick={onClick} >\n                {title}\n            </Link>\n        );\n    }\n\n    const _PageElements = () => {\n        let _html = [<li key={0}> <_Link\n            onClick={(ev) => page === 1 ? null : _onPageClickHandler(ev, { isPrev: true })}\n            title='Pev'\n        />\n        </li>];\n        for (let _p = 1; _p <= (totalPages < MAX_PAGE_SHOW ? totalPages : MAX_PAGE_SHOW); _p++) {\n            _html.push(<li key={_p} className={page === _p ? \"active\" : null}>\n                <_Link\n                    onClick={(ev) => page === _p ? null : _onPageClickHandler(ev, { _p })}\n                    title={_p}\n                />\n            </li>\n            );\n        }\n        _html.push(<li key={totalPages + 1}>\n            <_Link onClick={(ev) => page === totalPages ? null : _onPageClickHandler(ev, { isNext: true })} title=\"Next\" /></li>);\n\n        return _html;\n    }\n\n    if (totalPages <= 1)\n        return null;\n\n    return (\n        <ul className=\"pegination\">\n            <_PageElements />\n        </ul>\n    )\n}\n\nexport default BasePagination;\n","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\reuseable\\BaseList.js",["686"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport DefaultStructure from '../layouts/defaultStructure';\n\nconst BaseList = (props) => {\n    const { addButton,\n        listHeading,\n        children,\n        pageTitle,\n        pagination,\n        multiselect,\n        multiselectTitle,\n        multiSelectAction,\n        filter,\n        hasHistory,\n        historyTitle,\n        onLoadHistory,\n        HistoryData,\n        showHistory,\n        breadcrumb,\n        moreClass\n    } = props;\n    return (\n        <DefaultStructure pageTitle={pageTitle}>\n            {\n                breadcrumb\n            }\n            <div className=\"\">\n                {/* <div className=\"cmnpadding left_panel\"> */}\n\n                <div className=\"booking_payment_sec\"> \n                    <div className=\"listinngholder\">\n                        <div className=\"listinngholder_top\">\n                            {addButton && <Link to={addButton} className=\"commn-btn\">ADD</Link>}\n                            {multiselect &&\n                                <button\n                                    type=\"button\"\n                                    className=\"commn-btn mSelect\"\n                                    onClick={multiSelectAction}\n                                >\n                                    {multiselectTitle}\n                                </button>\n                            }\n                            {filter}\n                        </div>\n                        <div className={moreClass ? `lisingtable table-responsive add-tbl ${moreClass}` : \"lisingtable table-responsive add-tbl\"}>\n                            <table>\n                                <thead>\n                                    <tr>\n                                        {\n                                            listHeading && listHeading.length > 0 && listHeading.map((title, index) =>\n                                                <th key={index}>{multiselect && index === 0 ? multiselect : title}</th>\n                                            )\n                                        }\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {children}\n                                </tbody>\n                            </table>\n                        </div>\n                        {pagination}\n                    </div>\n                    {\n                        hasHistory &&\n                        <div className=\"loadhistory_btn-hlder\">\n                            <a href=\"#\" onClick={onLoadHistory} className=\"commn-btn\">Load History</a>\n                        </div>\n                    }\n                    {\n                        hasHistory && showHistory &&\n                        <div className=\"lisingtable table-responsive add-tbl\">\n                            <table>\n                                <thead>\n                                    <tr>\n                                        {\n                                            historyTitle && historyTitle.length > 0 && historyTitle.map((title, index) =>\n                                                <th key={index}>{multiselect && index === 0 ? multiselect : title}</th>\n                                            )\n                                        }\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {HistoryData}\n                                </tbody>\n                            </table>\n                        </div>\n                    }\n                    \n                </div>\n            </div>\n        </DefaultStructure>\n    )\n}\n\nexport default BaseList;\n","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\reuseable\\base-form.js",[],"D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\reuseable\\Bredcrumb.js",[],"D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\reuseable\\BaseImageList.js",["687","688","689"],"import React from 'react';\n\nconst BaseImageList = ({imageList, onRemove, isPdf}) => {\n\n    const _removeImageHandler = (ev, index) =>{\n        ev.preventDefault();\n        onRemove(index);\n    }\n\n    if(imageList.length > 0)\n        return (\n            <div className=\"addedit_image_holder\">\n                {\n                    imageList.map((img, index)=> \n                        <div key={index} className=\"image_box\">\n                            <img src={ isPdf ? require('../assets/images/pdf.png').default : img} alt=\"upload image\" />\n                            <a href=\"#\" onClick={(ev) =>_removeImageHandler(ev, index)}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></a>\n                        </div>\n                    )\n                }\n                \n            </div>\n        )\n    else \n        return (\n            <div className=\"addedit_image_holder\">\n                <p>No item added yet</p>\n            </div>\n        )\n}\n\nexport default BaseImageList;\n","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\reuseable\\hooks\\useForm.js",[],"D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\store\\actions\\dashboard.js",[],"D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\store\\actions\\auth.js",[],"D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\store\\actions\\user.js",[],"D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\store\\actions\\master.js",[],"D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\store\\actions\\chat.js",[],"D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\store\\actions\\globalNotification.js",[],"D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\layouts\\defaultStructure.js",[],"D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\dashboard\\components\\TotalCard.js",[],"D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\users-admin\\components\\Item.js",["690","691"],"import React, { useState } from 'react'\nimport { Link } from \"react-router-dom\";\nimport { RouteNames } from '../../../constants/RouteNames';\n\nconst Item = ({ data }) => {\n    const [ show, setShow ] = useState( false );\n    const moreButtonHandler = (ev) =>{\n        ev.preventDefault();\n        setShow( prevState => !prevState );\n    }\n    if( !data )\n        return (\n            <tr>\n                <td colSpan={3}>\n                    <span className=\"name\">No Data found</span>\n                </td> \n            </tr>\n        );\n\n\n    return (\n        <tr>\n            <td>\n                <span className=\"name\">{ data.first_name }</span>\n            </td>\n            <td>\n                <span className=\"name\">{ data.last_name }</span>\n            </td>\n            <td>\n                <span className=\"email\">{ data.email }</span>\n            </td> \n            <td>\n                <span className=\"role\">{ data.phone }</span>\n            </td> \n            <td>\n                <span className=\"role\">{ data.role.name }</span>\n            </td> \n            <td>\n                <div className=\"more\"> \n                <Link to={`${RouteNames.adminUserEdit}/${data._id}`}><i className=\"fa fa-pencil\" aria-hidden=\"true\"></i></Link>\n                     \n                </div>\n            </td>\n    </tr>\n    )\n}\n\nexport default Item;\n","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\user-chat\\components\\ChatRoom.js",[],"D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\user-chat\\components\\Item.js",["692","693","694","695","696","697","698","699","700"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { Link } from \"react-router-dom\";\nimport { RouteNames } from '../../../constants/RouteNames';\nimport Swal from 'sweetalert2';\nimport { toast } from 'react-toastify';\nconst Item = (props) => {\n    const dispatch = useDispatch();\n    const [show, setShow] = useState(false);\n    const [data, setData] = useState(props.data);\n    const [status, setStatus] = useState(props.status);\n\n    const _changeBookingStatus = (statusId) => {\n        //setShow( true );\n        Swal.fire({\n            title: 'Are you sure?',\n            text: 'Want to change Booking Status',\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes!'\n        }).then((result) => {\n            if (result.value) {\n                // updateBookingStatus({ status: statusId, consignment_id: data._id }).then(res => {\n\n                //     if (!res.error) {\n\n                //         toast.success(res.data.data, {\n                //             onOpen: () => {\n                //                 setData(prevData => ({\n                //                     ...prevData,\n                //                     statusData: {\n                //                         ...prevData.statusData,\n                //                         _id: statusId\n                //                     }\n                //                 })\n                //                 );\n                //             }\n                //         });\n\n                //     }\n                // });\n            }\n        })\n    }\n\n    const _confirmHandler = () => {\n        setShow(false);\n    }\n    //console.log(data);\n\n    if (!data)\n        return (\n            <tr>\n                <td colSpan=\"3\">\n                    <span className=\"name\">No Data found</span>\n                </td>\n            </tr>\n        );\n\n    //console.log(data);\n    return (\n        <>\n            <tr>\n                <td>\n                    <span className=\"name\">{data.user_name && data.user_name }</span>\n                </td>\n                <td>\n                    <span className=\"email\">{data.chat_type && data.chat_type}</span>\n                </td>\n                <td>\n                    <span className=\"role\">{data.is_active ? 'Active' : 'In-active'}</span>\n                </td>\n                <td>\n                    <div className=\"more\">\n                        <Link\n                            to={`${RouteNames.userChat}/${data.user_id}`}\n                            title=\"Start Chat\"\n                        >\n                            <i className=\"fa fa-comments\" aria-hidden=\"true\"></i>\n                        </Link>\n                    </div>\n                </td>\n            </tr>\n        </>\n    )\n}\n\nexport default Item;\n","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\global-notifications\\components\\UserList.js",[],"D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\global-notifications\\components\\Filter.js",[],"D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\states\\components\\Item.js",["701","702"],"import React, { useState } from 'react'\nimport { Link } from \"react-router-dom\";\nimport { RouteNames } from '../../../../constants/RouteNames';\nconst Item = ({ data }) => {\n    const [show, setShow] = useState(false);\n    const moreButtonHandler = (ev) => {\n        ev.preventDefault();\n        setShow(prevState => !prevState);\n    }\n    if (!data)\n        return (\n            <tr>\n                <td colSpan={3}>\n                    <span className=\"name\">No Data found</span>\n                </td>\n            </tr>\n        );\n\n\n    return (\n        <tr>\n            <td>\n                <span className=\"name\">{data.name}</span>\n            </td>\n            <td>\n                <div className=\"more\">\n                    <Link to={`${RouteNames.stateEdit}/${data._id}`}><i className=\"fa fa-pencil\" aria-hidden=\"true\"></i></Link>\n                    {/* <li><Link to=\"#\">delete</Link></li> */}\n                </div>\n            </td>\n        </tr>\n    )\n}\n\nexport default Item\n","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\store\\actions\\HttpRequest.js",["703","704"],"import { BASE_API_URL } from '../../constants/api-config';\nimport { Helper } from '../../helpers/helper';\n\n\nclass HttpRequest {\n\n    constructor() {\n        this.headerWithToken = {\n            'Content-Type': 'application/json',\n            'x-access-token': Helper.getToken()\n        };\n\n        this.headerWithTokenForFile = {\n            'x-access-token': Helper.getToken()\n        }\n\n        this.header = {\n            'Content-Type': 'application/json',\n        };\n    }\n\n    static headers() {\n        return\n    }\n\n    async getData(url, withPagination = false) {\n        try {\n            const response = await fetch(`${BASE_API_URL}${url}`, {\n                headers: this.headerWithToken,\n                method: 'GET'\n            });\n\n            const result = await response.json();\n\n            if (result.success) {\n                return {\n                    error: false,\n                    data: withPagination ? result : result.data\n                };\n            }\n\n            if (!result.auth && result.token_expired) {\n                this.clearLocalStroage();\n                return {\n                    error: true,\n                    message: result.message,\n                    redirect: true\n                }\n            }\n\n            throw new Error('Some thing went wrong..');\n\n        } catch (error) {\n            console.log(error.message);\n            return {\n                error: true,\n                data: null,\n                message: error\n            }\n        }\n    }\n\n    async postData(url, postData, login = false) {\n        try {\n            //console.log( postData );\n            const response = await fetch(`${BASE_API_URL}${url}`, {\n                headers: login ? this.header : this.headerWithToken,\n                method: 'POST',\n                body: JSON.stringify(postData)\n            });\n\n            const result = await response.json();\n\n            if (result.success) {\n                return {\n                    error: false,\n                    data: result\n                }\n            }\n\n            if (!result.auth && result.token_expired) {\n                this.clearLocalStroage();\n                return {\n                    error: true,\n                    message: result.message,\n                    redirect: true\n                }\n            }\n\n            if( !result.success ){\n                return {\n                    error: true,\n                    message: result.message\n                }\n            }\n\n\n            return {\n                error: true,\n                data: null,\n                message: 'Some thing went wrong.'\n            }\n\n\n        } catch (error) {\n            //console.log(error.message);\n            return {\n                error: true,\n                data: null,\n                message: 'Some thing went wrong.'\n            }\n        }\n    }\n\n    async postDataWithFiles(url, postData, method) {\n        try {\n            const result = await (await fetch(`${BASE_API_URL}${url}`, {\n                headers: this.headerWithTokenForFile,\n                method: method || 'POST',\n                body: postData\n            })).json();\n\n            if(result.success){\n                return {\n                    error: false,\n                    data: result.data\n                }\n            }\n\n            return {\n                error: true,\n                data: null\n            }\n\n        } catch (error) {\n            console.log(error);\n            return {\n                error: true,\n                data: null\n            }\n        }\n    }\n\n    async patchData(url, postData) {\n        try {\n\n            const response = await fetch(`${BASE_API_URL}${url}`, {\n                headers: HttpRequest.headers,\n                method: 'PATCH',\n                body: JSON.stringify(postData)\n            });\n\n            const result = await response.json();\n\n\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    async deleteData(url) {\n        try {\n            const response = await fetch(`${BASE_API_URL}${url}`, {\n                method: 'DELETE',\n                headers: HttpRequest.headers\n            });\n\n            //console.log('Test DELETE', response );\n\n            const result = await response.json();\n\n            //console.log('Test DELETE', result );\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    clearLocalStroage(){\n        localStorage.clear();\n    }\n}\n\nexport default HttpRequest;","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\layouts\\Footer.js",[],"D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\layouts\\TopBar.js",["705"],"import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport NotificationsAlert from \"./components/NotificationsAlert\";\nimport { adjustSideBar } from \"../store/actions/auth\";\n\nconst TopBar = ({ title }) => {\n\n    const sideBarStatus = useSelector(state => state.auth.sideBarStatus);\n\n    const dispatch = useDispatch();\n\n    const _updateSideBarStatus = (status) => {\n        dispatch(adjustSideBar(status));\n    }\n\n    return (\n        <div className=\"top_panel\">\n            <div className=\"top_panel_top clear\">\n\n                <Link to=\"/\" className={sideBarStatus ? \"logo logoOpen\" : \"logo\"} > </Link>\n\n                <a href=\"#\"\n                    className={sideBarStatus ? \"menu closebtn\" : \"menu openbtn\"}\n                    onClick={() => _updateSideBarStatus(!sideBarStatus)}> </a>\n\n                <h2 className=\"title\">{title || 'E-Edge'}</h2>\n                <div className=\"topright\">\n                    <div className=\"account\">\n                        <NotificationsAlert />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n        ;\n}\n\nexport default TopBar;","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\layouts\\SideBar.js",[],"D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\user-chat\\components\\ChatSearchItem.js",[],"D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\helpers\\helper.js",[],"D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\user-chat\\components\\ChatMessage.js",["706"],"import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport socketIOClient from \"socket.io-client\";\nimport { BASE_SOCKET_ENDPOINT } from '../../../constants/api-config';\nimport { toggleLoader } from '../../../store/actions/auth';\nimport { closeChatRoom } from '../../../store/actions/chat';\n\nfunction ChatMessage({ chat, roomId, activeChat, appUser, currentUserName, currentUserPic }) {\n\n    const messagesEndRef = useRef(null);\n    const user = useSelector(state => state.auth.user);\n    const [hideCloseBtn, setHideCloseBtn] = useState(false);\n    const dispatch = useDispatch();\n    const [chats, setChats] = useState([]);\n    const [message, setMessage] = useState('');\n    const [msgStart, setMsgStart] = useState(false);\n    const socket = socketIOClient(BASE_SOCKET_ENDPOINT /*, { transports: [\"websocket\"] }*/);\n\n    const [redirect, setRedirect] = useState(false);\n    const userReauthenticate = ({ message }) => {\n        toast.error(message, {\n            onOpen: () => setRedirect(true)\n        });\n    }\n\n    useEffect(() => {\n\n        setChats(chat && chat.length > 0 ? [...chat] : []);\n\n        socket.on('sentmessage', res => {\n            const { data } = res;\n            setMsgStart(false);\n            if (data && Object.keys(data).length > 0)\n                setChats(chatOld => [...chatOld, data]);\n                scrollToBottom();\n        });\n        if( chat && chat.length > 0){\n            setTimeout(() => { \n                const lastID = document.getElementById(`chat_${chat.length - 1}`);\n                lastID.scrollIntoView({ behavior: \"smooth\" });\n            }, 300)\n            \n        }\n        \n        return () => socket.disconnect();\n\n    }, [chat]);\n\n    const _chatMessageHandler = ({ target: { value } }) => {\n        setMessage(value);\n    }\n\n    const scrollToBottom = () => {\n        messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" })\n      }\n\n    const _sendChatMessage = (ev) => {\n        ev.preventDefault();\n        setMsgStart(true);\n        socket.emit(\"startChat\", {\n            roomId,\n            recipient: appUser,\n            sender: user._id,\n            message: message\n        });\n        \n        setMessage('');\n    }\n\n    const _closeChatHandler = () => {\n        setHideCloseBtn(true);\n        dispatch(toggleLoader(true));\n        closeChatRoom(roomId).then(resp => {\n            dispatch(toggleLoader(false));\n            if (!resp.error)\n                toast.success('Chat closed successfully.')\n            if (resp.redirect)\n                userReauthenticate(resp);\n        });\n    }\n\n    //console.log(chat);\n\n    if (redirect)\n        return <Redirect to=\"/login\" />\n\n    return (\n        <div className=\"cht-box-hlder\">\n            <div className=\"cht-box-header\">\n                <span className=\"cht-box-profile-pic-hlder\">\n                    {\n                        currentUserPic ?\n                            <img src={currentUserPic} alt={currentUserName} />\n                            : <img\n                                src={require('../../../assets/images/cht-profile-pic.jpg').default}\n                                alt=\"cht-profile\"\n                            />\n                    }\n\n                </span>\n                <h4>{currentUserName}</h4>\n                {\n                    activeChat && !hideCloseBtn &&\n                    <div className=\"btn__close_chat_wrapper\">\n                        <button\n                            type=\"button\"\n                            className=\"close__msg__button\"\n                            onClick={_closeChatHandler}\n                        >Close chat</button>\n                    </div>\n                }\n            </div>\n\n            <div className=\"main-cht-box-hlder\">\n                <ul className=\"main-cht-list-ul\">\n                    {\n                        chats && chats.length > 0 && chats.map((chat, index) =>\n\n                            <li id={`chat_${index}`} key={index} className={chat.sender === user._id ? \"my-cht\" : \"opnent-cht\"}>\n                                <p>{chat.message}</p>\n                            </li>\n                            \n                        )\n                        \n                    }\n                    <li className={ msgStart ? \"loadEMsg load_msg\" : \"load_msg\"}></li>\n                    <li><div ref={messagesEndRef}></div></li>\n                </ul>\n                \n                {activeChat && !hideCloseBtn &&\n                    <div className=\"cht-type-fild\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Type your question here\"\n                            value={message}\n                            onChange={_chatMessageHandler}\n                            onKeyDown={(e) => {\n                                if(e.key === 'Enter'){\n                                    _sendChatMessage(e);\n                                }\n                            }}\n                        />\n                        <input\n                            type=\"submit\"\n                            disabled={!!!message}\n                            className=\"snd-msg\" value=\"\"\n                            onClick={_sendChatMessage}\n                        />\n                    </div>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default ChatMessage;\n","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\constants\\api-config.js",["707"],"/**\n * Dev Server\n */\n//export const BASE_API_URL = '';\n//export const BASE_SOCKET_ENDPOINT = '';\n\n/**\n * Local Server\n */\nconst production = process.env.NODE_ENV == \"production\" ? true : true\n\nexport const BASE_API_URL = production ? 'http://3.108.124.251:8080/api/' : 'http://localhost:8080/api/';\nexport const BASE_SOCKET_ENDPOINT = production ? 'http://3.108.124.251:8080' : 'http://localhost:8080';","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\layouts\\components\\UserProfile.js",["708","709"],"/**\n|--------------------------------------------------\n| User Profile section for Admin\n|--------------------------------------------------\n*/\n\n/**\n * Add dependencies\n */\n\nimport React from 'react';\nimport { useSelector } from \"react-redux\";\n\nconst UserProfile = () => {\n\n    const user = useSelector(state => state.auth.user);\n    const [showProfile, setShowProfile] = React.useState(false);\n\n    const _profileHandler = (ev) =>{\n        ev.preventDefault();\n        setShowProfile(prevState => !prevState);\n    }\n    \n    return (\n        <div className=\"user_profile_holder\">\n            <div className=\"profile_details_holder\">\n                <span className=\"user_propic\">\n                    {\n                    user && user.profile_picture ? \n                        <img src={user.profile_picture} alt=\"user_profile\" />\n                    : <img src={require('../../assets/images/user-pro.png').default} alt=\"user\" />\n                    }\n                    \n                </span>\n            <div className=\"user_profile_txt\">\n                <h4>{user && user.first_name && user.last_name ? `${user.first_name} ${user.last_name}` : ''}</h4>\n                <p>{user.designation && user.designation}</p>\n            </div>\n                <a href=\"#\" onClick={_profileHandler} className={showProfile ? \"profilearrow openProfile\" : \"profilearrow\" }></a>\n            </div>\n\n            <div className={showProfile ? \"user_profile_detailsholder openProfile\" : \"user_profile_detailsholder\" }>\n                <p>Email: {user.email && user.email}</p>\n                <p>Phone No.: {user.phone && user.phone}</p>\n            </div>\n      </div>\n    )\n}\n\nexport default UserProfile\n","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\layouts\\components\\SideBarItem.js",["710"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction SideBarItem({ classes, title, icon, menuTitle, navTo, hasSubMenu, onClose, isOpen, onOpen }) {\n    const [open, setOpen] = useState(isOpen);\n\n    React.useEffect(() => {\n        if (isOpen)\n            onOpen(isOpen);\n    }, []);\n\n    const _handleSabMenu = (ev) => {\n        ev.preventDefault();\n        if (onClose)\n            onClose();\n        else\n            setOpen(open => !open);\n    }\n\n    return (\n        <li>\n            <Link\n                to={navTo ? navTo : \"#\"}\n                className={classes}\n                title={title}\n                onClick={(hasSubMenu || onClose) ? _handleSabMenu : null}\n            >\n                <span className=\"ico\"><i className={`fa ${icon}`} aria-hidden=\"true\"></i></span>\n                <span className=\"text\">{menuTitle}</span>\n            </Link>\n            {\n                hasSubMenu &&\n                <ul className={open ? \"submenu open\" : \"submenu\"}>\n                    {hasSubMenu}\n                </ul>\n\n            }\n        </li>\n    )\n}\n\nexport default SideBarItem;\n","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\layouts\\components\\NotificationsAlert.js",["711","712"],"import React, { useEffect, useState } from 'react';\nimport socketIOClient from \"socket.io-client\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { BASE_SOCKET_ENDPOINT } from '../../constants/api-config';\nimport { triggerNotificationSocket } from '../../store/actions/auth';\n\nfunction NotificationsAlert() {\n    const dispatch = useDispatch();\n    const user = useSelector(state => state.auth.user);\n    const [open, setOpen] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const updateSocket = useSelector(state => state.auth.updateSocket);\n    const [count, setCount] = useState(0);\n    const [msgs, setMsgs] = useState([]);\n    const socket = socketIOClient(BASE_SOCKET_ENDPOINT/*, {transports: ['websocket'], secure: true}*/);\n\n    const _natificationHandler = (ev) => {\n        ev.preventDefault();\n        setOpen(oldData => !oldData);\n    }\n\n    useEffect(() => {\n\n        if (user && user._id) {\n            //console.log(user._id);\n            setIsLoading(true);\n            socket.emit('newnotification', { user_id: user._id });\n\n            socket.on(\"sentnotification\", res => {\n                //console.log('RES',res );\n                if (updateSocket)\n                    dispatch(triggerNotificationSocket(!updateSocket));\n                if (res) {\n                    const { data } = res;\n\n                    setIsLoading(false);\n                    setCount(res.count ? res.count : 0);\n                    setMsgs(data && data.length > 0 ? data : []);\n\n                }\n            });\n        }\n\n        return () => socket.disconnect();\n    }, [updateSocket]);\n\n    return (\n        <>\n            <a className=\"icon notifictn-a \" href=\"#\" onClick={_natificationHandler}>\n                <i className=\"fa fa-bell\" aria-hidden=\"true\"></i>\n                {count > 0 && <span className={isLoading ? \"count _countLoading\" : \"count\"}>{count}</span>}\n            </a>\n            {\n                msgs && msgs.length > 0 &&\n                <div className={open ? \"header-nofictn-hlder open\" : \"header-nofictn-hlder\"}>\n                    <ul className=\"header-nofictn-ul\">\n                        {\n                            msgs.map(msg =>\n                                <li key={msg._id}>{msg.notification_text}</li>\n                            )\n                        }\n                    </ul>\n                </div>\n            }\n        </>\n\n    )\n}\n\nexport default NotificationsAlert;\n","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\cities\\CityList.js",["713"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { RouteNames } from '../../../constants/RouteNames';\nimport BaseList from '../../../reuseable/BaseList';\nimport Item from './components/Item';\nimport { getCities } from '../../../store/actions/master';\nimport { toggleLoader } from '../../../store/actions/auth';\nimport { Redirect } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport BasePagination from '../../../reuseable/BasePagination';\n\nfunction CityList() {\n    const HeadingTitle = [\n        'Name',\n        'aciton'\n    ];\n\n    const [getCitiesData, setCitiesData] = useState([]);\n    const dispatch = useDispatch();\n    const [pageInfo, setPageInfo] = useState({});\n\n    const _loadMoreItems = (filter = {}) => {\n        dispatch(toggleLoader(true));\n        getCities(filter).then(response => {\n            dispatch(toggleLoader(false));\n            if (!response.error){\n                setCitiesData(response.data);\n                if( response.data.extra )\n                    setPageInfo(response.data.extra);\n            }\n            if (response.redirect)\n                userReauthenticate(response);\n        });\n    }\n\n    const [redirect, setRedirect] = useState(false);\n    const userReauthenticate = ({ message }) => {\n        toast.error(message, {\n            onOpen: () => setRedirect(true)\n        });\n    }\n\n    useEffect(() => {\n        _loadMoreItems();\n    }, []);\n\n    //console.log(branches);\n\n    if (redirect)\n        return <Redirect to=\"/login\" />\n\n    return (\n        <BaseList\n            addButton={RouteNames.cityAdd}\n            listHeading={HeadingTitle}\n            pageTitle='Cities'\n            pagination={<BasePagination\n                pages={pageInfo}\n                onPaginate={_loadMoreItems}\n            />}\n        >\n            { getCitiesData.length > 0 ? getCitiesData.map(cityval => <Item key={cityval._id} data={cityval} />)\n                : <tr>\n                    <td colSpan={6} className=\"text-center\">\n                        <span className=\"name\">No Data found</span>\n                    </td>\n                </tr>\n            }\n        </BaseList>\n    )\n}\n\nexport default CityList\n","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\cities\\CityEdit.js",["714","715","716","717","718","719","720","721"],"import React, { useState, useEffect } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { useDispatch } from 'react-redux';\nimport { RouteNames } from '../../../constants/RouteNames';\nimport DefaultStructure from '../../../layouts/defaultStructure';\nimport BaseForm from '../../../reuseable/base-form';\nimport useForm from '../../../reuseable/hooks/useForm';\nimport { getStates, addCity,getCityById,updateCity } from '../../../store/actions/master';\nimport { toggleLoader } from '../../../store/actions/auth';\nimport Bredcrumb from '../../../reuseable/Bredcrumb';\n\nconst CityEdit = (props) => {\n    const { id } = useParams();\n    const dispatch = useDispatch();\n    const [redirectToList, setRedirectToList] = useState(false);\n    const [loadState, setLoadState] = useState(false);\n    const [loadCity, setLoadCity] = useState(false);\n    const [states, setStates] = useState([]);\n    const [cities, setCities] = useState([]);\n    const [isSubmitBtnPressed, setIsSubmitBtnPressed] = useState(false);\n\n    const [redirect, setRedirect] = useState(false);\n    const userReauthenticate = ({ message }) => {\n        toast.error(message, {\n            onOpen: () => setRedirect(true)\n        });\n    }\n\n    const [state, inputHandler, _, updateForm] = useForm(\n        {\n            name: {\n                value: '',\n                isValid: false,\n                isTouched: false\n            },\n            state_id: {\n                value: '',\n                isValid: false,\n                isTouched: false\n            }\n        },\n        false\n    );\n\n    const _setFormData = (data) => {\n        let formatedData = {};\n        for (const _k in data) {\n            formatedData[_k] = {\n                value: data[_k],\n                isValid: true,\n                isTouched: true\n            }\n        }\n\n        return formatedData;\n    }\n\n    const _setSubmitableData = (data) => {\n        let formData = {};\n\n        for (const k in data) {\n            formData[k] = data[k].value;\n        }\n\n        return formData;\n    }\n\n    useEffect(() => {\n        //setLoadState(true);\n        /* getStates().then(resp => {\n            setStates(resp.data);\n            setLoadState(false);\n        }) */\n\n        if (id) {\n            dispatch(toggleLoader(true));\n\n            getCityById(id).then(\n                response => {\n                    dispatch(toggleLoader(false));\n                    if (!response.error) {\n                        updateForm(_setFormData(response.data), true);\n                        if( response.data.state_id ){\n                            setLoadCity(true);\n                            //__loadCities(response.data.state_id);\n                        }\n                        \n                    }\n                    if (response.redirect)\n                        userReauthenticate(response);\n                }\n            ).catch(error => {\n                console.log(error);\n            });\n        }\n    }, [id]);\n    useEffect(()=>{\n        getStates().then(response => {\n            dispatch(toggleLoader(false));\n            if (!response.error){\n                setStates(response.data);\n                // if( response.data.extra )\n                //     setPageInfo(response.data.extra);\n            }\n            // if (response.redirect)\n            //     userReauthenticate(response);\n        });\n    },[])\n\n    //console.log(state.inputs);\n\n    const handleFormSubmit = (ev) => {\n\n        ev.preventDefault();\n        setIsSubmitBtnPressed(true);\n        const { inputs, formValidity } = state;\n        console.log(formValidity)\n        if (formValidity) {\n            dispatch(toggleLoader(true));\n\n            if(!id){\n                addCity(_setSubmitableData(inputs)).then(result => {\n                    if (!result.error) {\n                        dispatch(toggleLoader(false));\n                        toast.success(result.message,\n                            { onOpen: () => setRedirectToList(true) }\n                        );\n                    }\n                    if (result.redirect)\n                        userReauthenticate(result);\n                });\n            }\n            if(id){\n                updateCity(_setSubmitableData(inputs)).then(result => {\n                    if (!result.error) {\n                        dispatch(toggleLoader(false));\n                        toast.success(result.message,\n                            { onOpen: () => setRedirectToList(true) }\n                        );\n                    }\n                    if (result.redirect)\n                        userReauthenticate(result);\n                });\n            }\n           /*  if (!id)\n                addBranch(_setSubmitableData(inputs)).then(result => {\n                    if (!result.error) {\n                        dispatch(toggleLoader(false));\n                        toast.success(result.message,\n                            { onOpen: () => setRedirectToList(true) }\n                        );\n                    }\n                    if (result.redirect)\n                        userReauthenticate(result);\n                });\n\n            if (id)\n                updateBranch(_setSubmitableData(inputs)).then(result => {\n                    if (!result.error) {\n                        dispatch(toggleLoader(false));\n                        toast.success(result.message,\n                            { onOpen: () => setRedirectToList(true) }\n                        );\n                    }\n                    if (result.redirect)\n                        userReauthenticate(result);\n                }); */\n        }\n    }\n\n    const FormHandler = () => {\n        return (\n            <div className=\"submitdiv\">\n                <input type=\"submit\" name=\"\" value=\"submit\" onClick={handleFormSubmit} />\n            </div>\n        );\n    }\n\n    const _handleState = ({ target: { value } }) => {\n        inputHandler('state_id', value);\n        /* setLoadCity(true);\n        inputHandler('state_id', value);\n        __loadCities(value); */\n    }\n\n    const __loadCities = (stateId) => {\n       /*  getCitiesByState(stateId).then(resp => {\n            if (resp.data)\n                setCities(resp.data);\n            setLoadCity(false);\n        }).catch(error => {\n            setLoadCity(false);\n        }) */\n    }\n\n    if (redirect)\n        return <Redirect to=\"/login\" />\n\n    if (redirectToList)\n        return (\n            <Redirect to={RouteNames.cityList} />\n        )\n\n    return (\n        <DefaultStructure pageTitle='City Add/Edit Form'>\n            <Bredcrumb\n                leading={{ title: 'City', url: RouteNames.cityList }}\n                trailing={{ title: 'Add-Edit Form', url: '#' }}\n            />\n            <BaseForm buttonSection={<FormHandler />}>\n                <div className=\"form-group\">\n                    <label>Name <em>*</em></label>\n                    <input\n                        type=\"text\"\n                        name=\"\"\n                        value={state.inputs.name.value}\n                        onChange={(e) => inputHandler('name', e.target.value)}\n                    //onBlur={() => touchHandler('name') }\n                    />\n                    {!state.formValidity && isSubmitBtnPressed && state.inputs.name.value === '' &&\n                        <span className=\"invalid\">Name is required field.</span>\n                    }\n                </div>\n\n                <div className={loadState ? \"form-group load-frm-grup\" : \"form-group\"}>\n                    <label>States <em>*</em></label>\n                    {loadState && <span className=\"cityLoading\"></span>}\n                    <select\n                        value={state.inputs.state_id ? state.inputs.state_id.value : ''}\n                        onChange={_handleState}\n                    >\n                        <option value=\"\">Select State</option>\n                        {\n                            states && states.length > 0 && states.map(state => <option value={state._id} key={state._id}>{state.name} </option>)\n                        }\n                    </select>\n                    {!state.formValidity && isSubmitBtnPressed && state.inputs.state_id.value === '' &&\n                        <span className=\"invalid\">State is required field.</span>\n                    }\n                </div>\n                \n            </BaseForm>\n        </DefaultStructure>\n    )\n}\n\nexport default CityEdit;\n","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\companytype\\CompanyTypeEdit.js",["722","723","724","725","726","727","728","729","730","731","732","733","734","735","736","737","738","739","740"],"import React, { useState, useEffect } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { useDispatch } from 'react-redux';\nimport { RouteNames } from '../../../constants/RouteNames';\nimport DefaultStructure from '../../../layouts/defaultStructure';\nimport BaseForm from '../../../reuseable/base-form';\nimport useForm from '../../../reuseable/hooks/useForm';\nimport { addBranch, getBranchById, updateBranch, getStates, getCitiesByState,addStates,addCity, addSkill, addCompanyTypes, getCompanyTypeById, updateCompanyType } from '../../../store/actions/master';\nimport { toggleLoader } from '../../../store/actions/auth';\nimport Bredcrumb from '../../../reuseable/Bredcrumb';\n\nconst CompanyTypeEdit = (props) => {\n    const { id } = useParams();\n    const dispatch = useDispatch();\n    const [redirectToList, setRedirectToList] = useState(false);\n    const [loadState, setLoadState] = useState(false);\n    const [loadCity, setLoadCity] = useState(false);\n    const [states, setStates] = useState([]);\n    const [cities, setCities] = useState([]);\n    const [isSubmitBtnPressed, setIsSubmitBtnPressed] = useState(false);\n\n    const [redirect, setRedirect] = useState(false);\n    const userReauthenticate = ({ message }) => {\n        toast.error(message, {\n            onOpen: () => setRedirect(true)\n        });\n    }\n\n    const [state, inputHandler, _, updateForm] = useForm(\n        {\n            name: {\n                value: '',\n                isValid: false,\n                isTouched: false\n            }\n            \n        },\n        false\n    );\n\n    const _setFormData = (data) => {\n        let formatedData = {};\n        for (const _k in data) {\n            formatedData[_k] = {\n                value: data[_k],\n                isValid: true,\n                isTouched: true\n            }\n        }\n\n        return formatedData;\n    }\n\n    const _setSubmitableData = (data) => {\n        let formData = {};\n\n        for (const k in data) {\n            formData[k] = data[k].value;\n        }\n\n        return formData;\n    }\n\n    useEffect(() => {\n        //setLoadState(true);\n        /* getStates().then(resp => {\n            setStates(resp.data);\n            setLoadState(false);\n        }) */\n\n        if (id) {\n            dispatch(toggleLoader(true));\n\n            getCompanyTypeById(id).then(\n                response => {\n                    dispatch(toggleLoader(false));\n                    if (!response.error) {\n                        updateForm(_setFormData(response.data), true);\n                        if( response.data.state_id ){\n                            setLoadCity(true);\n                            //__loadCities(response.data.state_id);\n                        }\n                        \n                    }\n                    if (response.redirect)\n                        userReauthenticate(response);\n                }\n            ).catch(error => {\n                console.log(error);\n            });\n        }\n    }, [id]);\n    useEffect(()=>{\n       \n    },[])\n\n    //console.log(state.inputs);\n\n    const handleFormSubmit = (ev) => {\n\n        ev.preventDefault();\n        setIsSubmitBtnPressed(true);\n        const { inputs, formValidity } = state;\n        console.log(formValidity)\n        if (formValidity) {\n            dispatch(toggleLoader(true));\n\n            if(!id){\n                addCompanyTypes(_setSubmitableData(inputs)).then(result => {\n                    if (!result.error) {\n                        dispatch(toggleLoader(false));\n                        toast.success(result.message,\n                            { onOpen: () => setRedirectToList(true) }\n                        );\n                    }\n                    if (result.redirect)\n                        userReauthenticate(result);\n                });\n            }\n\n            if(id){\n                updateCompanyType(_setSubmitableData(inputs)).then(result => {\n                    if (!result.error) {\n                        dispatch(toggleLoader(false));\n                        toast.success(result.message,\n                            { onOpen: () => setRedirectToList(true) }\n                        );\n                    }\n                    if (result.redirect)\n                        userReauthenticate(result);\n                });\n            }\n           /*  if (!id)\n                addBranch(_setSubmitableData(inputs)).then(result => {\n                    if (!result.error) {\n                        dispatch(toggleLoader(false));\n                        toast.success(result.message,\n                            { onOpen: () => setRedirectToList(true) }\n                        );\n                    }\n                    if (result.redirect)\n                        userReauthenticate(result);\n                });\n\n            if (id)\n                updateBranch(_setSubmitableData(inputs)).then(result => {\n                    if (!result.error) {\n                        dispatch(toggleLoader(false));\n                        toast.success(result.message,\n                            { onOpen: () => setRedirectToList(true) }\n                        );\n                    }\n                    if (result.redirect)\n                        userReauthenticate(result);\n                }); */\n        }\n    }\n\n    const FormHandler = () => {\n        return (\n            <div className=\"submitdiv\">\n                <input type=\"submit\" name=\"\" value=\"submit\" onClick={handleFormSubmit} />\n            </div>\n        );\n    }\n\n    const _handleState = ({ target: { value } }) => {\n        inputHandler('state_id', value);\n        /* setLoadCity(true);\n        inputHandler('state_id', value);\n        __loadCities(value); */\n    }\n\n    const __loadCities = (stateId) => {\n       /*  getCitiesByState(stateId).then(resp => {\n            if (resp.data)\n                setCities(resp.data);\n            setLoadCity(false);\n        }).catch(error => {\n            setLoadCity(false);\n        }) */\n    }\n\n    if (redirect)\n        return <Redirect to=\"/login\" />\n\n    if (redirectToList)\n        return (\n            <Redirect to={RouteNames.companyTypeList} />\n        )\n\n    return (\n        <DefaultStructure pageTitle='Company Add/Edit Form'>\n            <Bredcrumb\n                leading={{ title: 'Company types', url: RouteNames.companyTypeList }}\n                trailing={{ title: 'Add-Edit Form', url: '#' }}\n            />\n            <BaseForm buttonSection={<FormHandler />}>\n                <div className=\"form-group\">\n                    <label>Name <em>*</em></label>\n                    <input\n                        type=\"text\"\n                        name=\"\"\n                        value={state.inputs.name.value}\n                        onChange={(e) => inputHandler('name', e.target.value)}\n                    //onBlur={() => touchHandler('name') }\n                    />\n                    {!state.formValidity && isSubmitBtnPressed && state.inputs.name.value === '' &&\n                        <span className=\"invalid\">Name is required field.</span>\n                    }\n                </div>\n\n               \n                \n            </BaseForm>\n        </DefaultStructure>\n    )\n}\n\nexport default CompanyTypeEdit;\n","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\companytype\\CompanyTypeList.js",["741","742","743"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { RouteNames } from '../../../constants/RouteNames';\nimport BaseList from '../../../reuseable/BaseList';\nimport Item from './components/Item';\nimport { getCities, getSkills, getCompanyTypes } from '../../../store/actions/master';\nimport { toggleLoader } from '../../../store/actions/auth';\nimport { Redirect } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport BasePagination from '../../../reuseable/BasePagination';\n\nfunction CompanyTypeList() {\n    const HeadingTitle = [\n        'Name',\n        'aciton'\n    ];\n\n    const [companyTypesData, setSCompanyTypeData] = useState([]);\n    const dispatch = useDispatch();\n    const [pageInfo, setPageInfo] = useState({});\n\n    const _loadMoreItems = (filter = {}) => {\n        console.log(\"hello\")\n        dispatch(toggleLoader(true));\n        getCompanyTypes(filter).then(response => {\n            dispatch(toggleLoader(false));\n            if (!response.error){\n                setSCompanyTypeData(response.data);\n                if( response.data.extra )\n                    setPageInfo(response.data.extra);\n            }\n            if (response.redirect)\n                userReauthenticate(response);\n        });\n    }\n\n    const [redirect, setRedirect] = useState(false);\n    const userReauthenticate = ({ message }) => {\n        toast.error(message, {\n            onOpen: () => setRedirect(true)\n        });\n    }\n\n    useEffect(() => {\n        _loadMoreItems();\n    }, []);\n\n    //console.log(branches);\n\n    if (redirect)\n        return <Redirect to=\"/login\" />\n\n    return (\n        <BaseList\n            addButton={RouteNames.companyTypeAdd}\n            listHeading={HeadingTitle}\n            pageTitle='Company types'\n            pagination={<BasePagination\n                pages={pageInfo}\n                onPaginate={_loadMoreItems}\n            />}\n        >\n            { companyTypesData.length > 0 ? companyTypesData.map(companyTypeVal => <Item key={companyTypeVal._id} data={companyTypeVal} />)\n                : <tr>\n                    <td colSpan={6} className=\"text-center\">\n                        <span className=\"name\">No Data found</span>\n                    </td>\n                </tr>\n            }\n        </BaseList>\n    )\n}\n\nexport default CompanyTypeList\n","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\skills\\SkillList.js",["744","745"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { RouteNames } from '../../../constants/RouteNames';\nimport BaseList from '../../../reuseable/BaseList';\nimport Item from './components/Item';\nimport { getCities, getSkills } from '../../../store/actions/master';\nimport { toggleLoader } from '../../../store/actions/auth';\nimport { Redirect } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport BasePagination from '../../../reuseable/BasePagination';\n\nfunction SkillList() {\n    const HeadingTitle = [\n        'Name',\n        'aciton'\n    ];\n\n    const [getSkillsData, setSkillsData] = useState([]);\n    const dispatch = useDispatch();\n    const [pageInfo, setPageInfo] = useState({});\n\n    const _loadMoreItems = (filter = {}) => {\n        dispatch(toggleLoader(true));\n        getSkills(filter).then(response => {\n            dispatch(toggleLoader(false));\n            if (!response.error){\n                setSkillsData(response.data);\n                if( response.data.extra )\n                    setPageInfo(response.data.extra);\n            }\n            if (response.redirect)\n                userReauthenticate(response);\n        });\n    }\n\n    const [redirect, setRedirect] = useState(false);\n    const userReauthenticate = ({ message }) => {\n        toast.error(message, {\n            onOpen: () => setRedirect(true)\n        });\n    }\n\n    useEffect(() => {\n        _loadMoreItems();\n    }, []);\n\n    //console.log(branches);\n\n    if (redirect)\n        return <Redirect to=\"/login\" />\n\n    return (\n        <BaseList\n            addButton={RouteNames.skillAdd}\n            listHeading={HeadingTitle}\n            pageTitle='Cities'\n            pagination={<BasePagination\n                pages={pageInfo}\n                onPaginate={_loadMoreItems}\n            />}\n        >\n            { getSkillsData.length > 0 ? getSkillsData.map(skillVal => <Item key={skillVal._id} data={skillVal} />)\n                : <tr>\n                    <td colSpan={6} className=\"text-center\">\n                        <span className=\"name\">No Data found</span>\n                    </td>\n                </tr>\n            }\n        </BaseList>\n    )\n}\n\nexport default SkillList\n","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\skills\\SkillEdit.js",["746","747","748","749","750","751","752","753","754","755","756"],"import React, { useState, useEffect } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { useDispatch } from 'react-redux';\nimport { RouteNames } from '../../../constants/RouteNames';\nimport DefaultStructure from '../../../layouts/defaultStructure';\nimport BaseForm from '../../../reuseable/base-form';\nimport useForm from '../../../reuseable/hooks/useForm';\nimport { addSkill, getSkillById, updateSkill } from '../../../store/actions/master';\nimport { toggleLoader } from '../../../store/actions/auth';\nimport Bredcrumb from '../../../reuseable/Bredcrumb';\n\nconst SkillEdit = (props) => {\n    const { id } = useParams();\n    const dispatch = useDispatch();\n    const [redirectToList, setRedirectToList] = useState(false);\n    const [loadState, setLoadState] = useState(false);\n    const [loadCity, setLoadCity] = useState(false);\n    const [states, setStates] = useState([]);\n    const [cities, setCities] = useState([]);\n    const [isSubmitBtnPressed, setIsSubmitBtnPressed] = useState(false);\n\n    const [redirect, setRedirect] = useState(false);\n    const userReauthenticate = ({ message }) => {\n        toast.error(message, {\n            onOpen: () => setRedirect(true)\n        });\n    }\n\n    const [state, inputHandler, _, updateForm] = useForm(\n        {\n            name: {\n                value: '',\n                isValid: false,\n                isTouched: false\n            }\n            \n        },\n        false\n    );\n\n    const _setFormData = (data) => {\n        let formatedData = {};\n        for (const _k in data) {\n            formatedData[_k] = {\n                value: data[_k],\n                isValid: true,\n                isTouched: true\n            }\n        }\n\n        return formatedData;\n    }\n\n    const _setSubmitableData = (data) => {\n        let formData = {};\n\n        for (const k in data) {\n            formData[k] = data[k].value;\n        }\n\n        return formData;\n    }\n\n    useEffect(() => {\n        //setLoadState(true);\n        /* getStates().then(resp => {\n            setStates(resp.data);\n            setLoadState(false);\n        }) */\n\n        if (id) {\n            dispatch(toggleLoader(true));\n\n            getSkillById(id).then(\n                response => {\n                    dispatch(toggleLoader(false));\n                    if (!response.error) {\n                        updateForm(_setFormData(response.data), true);\n                        if( response.data.state_id ){\n                            setLoadCity(true);\n                            //__loadCities(response.data.state_id);\n                        }\n                        \n                    }\n                    if (response.redirect)\n                        userReauthenticate(response);\n                }\n            ).catch(error => {\n                console.log(error);\n            });\n        }\n    }, [id]);\n    useEffect(()=>{\n       \n    },[])\n\n    //console.log(state.inputs);\n\n    const handleFormSubmit = (ev) => {\n\n        ev.preventDefault();\n        setIsSubmitBtnPressed(true);\n        const { inputs, formValidity } = state;\n        console.log(formValidity)\n        if (formValidity) {\n            dispatch(toggleLoader(true));\n\n            if(!id){\n                addSkill(_setSubmitableData(inputs)).then(result => {\n                    if (!result.error) {\n                        dispatch(toggleLoader(false));\n                        toast.success(result.message,\n                            { onOpen: () => setRedirectToList(true) }\n                        );\n                    }\n                    if (result.redirect)\n                        userReauthenticate(result);\n                });\n            }\n\n            if(id){\n                updateSkill(_setSubmitableData(inputs)).then(result => {\n                    if (!result.error) {\n                        dispatch(toggleLoader(false));\n                        toast.success(result.message,\n                            { onOpen: () => setRedirectToList(true) }\n                        );\n                    }\n                    if (result.redirect)\n                        userReauthenticate(result);\n                });\n            }\n           /*  if (!id)\n                addBranch(_setSubmitableData(inputs)).then(result => {\n                    if (!result.error) {\n                        dispatch(toggleLoader(false));\n                        toast.success(result.message,\n                            { onOpen: () => setRedirectToList(true) }\n                        );\n                    }\n                    if (result.redirect)\n                        userReauthenticate(result);\n                });\n\n            if (id)\n                updateBranch(_setSubmitableData(inputs)).then(result => {\n                    if (!result.error) {\n                        dispatch(toggleLoader(false));\n                        toast.success(result.message,\n                            { onOpen: () => setRedirectToList(true) }\n                        );\n                    }\n                    if (result.redirect)\n                        userReauthenticate(result);\n                }); */\n        }\n    }\n\n    const FormHandler = () => {\n        return (\n            <div className=\"submitdiv\">\n                <input type=\"submit\" name=\"\" value=\"submit\" onClick={handleFormSubmit} />\n            </div>\n        );\n    }\n\n    const _handleState = ({ target: { value } }) => {\n        inputHandler('state_id', value);\n        /* setLoadCity(true);\n        inputHandler('state_id', value);\n        __loadCities(value); */\n    }\n\n    const __loadCities = (stateId) => {\n       /*  getCitiesByState(stateId).then(resp => {\n            if (resp.data)\n                setCities(resp.data);\n            setLoadCity(false);\n        }).catch(error => {\n            setLoadCity(false);\n        }) */\n    }\n\n    if (redirect)\n        return <Redirect to=\"/login\" />\n\n    if (redirectToList)\n        return (\n            <Redirect to={RouteNames.skillList} />\n        )\n\n    return (\n        <DefaultStructure pageTitle='Skill Add/Edit Form'>\n            <Bredcrumb\n                leading={{ title: 'Skill', url: RouteNames.skillList }}\n                trailing={{ title: 'Add-Edit Form', url: '#' }}\n            />\n            <BaseForm buttonSection={<FormHandler />}>\n                <div className=\"form-group\">\n                    <label>Name <em>*</em></label>\n                    <input\n                        type=\"text\"\n                        name=\"\"\n                        value={state.inputs.name.value}\n                        onChange={(e) => inputHandler('name', e.target.value)}\n                    //onBlur={() => touchHandler('name') }\n                    />\n                    {!state.formValidity && isSubmitBtnPressed && state.inputs.name.value === '' &&\n                        <span className=\"invalid\">Name is required field.</span>\n                    }\n                </div>\n\n               \n                \n            </BaseForm>\n        </DefaultStructure>\n    )\n}\n\nexport default SkillEdit;\n","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\companytype\\components\\Item.js",["757","758"],"import React, { useState } from 'react'\nimport { Link } from \"react-router-dom\";\nimport { RouteNames } from '../../../../constants/RouteNames';\nconst Item = ({ data }) => {\n    const [show, setShow] = useState(false);\n    const moreButtonHandler = (ev) => {\n        ev.preventDefault();\n        setShow(prevState => !prevState);\n    }\n    if (!data)\n        return (\n            <tr>\n                <td colSpan={3}>\n                    <span className=\"name\">No Data found</span>\n                </td>\n            </tr>\n        );\n\n\n    return (\n        <tr>\n            <td>\n                <span className=\"name\">{data.name}</span>\n            </td>\n            <td>\n                <div className=\"more\">\n                    <Link to={`${RouteNames.companyTypeEdit}/${data._id}`}><i className=\"fa fa-pencil\" aria-hidden=\"true\"></i></Link>\n                    {/* <li><Link to=\"#\">delete</Link></li> */}\n                </div>\n            </td>\n        </tr>\n    )\n}\n\nexport default Item\n","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\cities\\components\\Item.js",["759","760"],"import React, { useState } from 'react'\nimport { Link } from \"react-router-dom\";\nimport { RouteNames } from '../../../../constants/RouteNames';\nconst Item = ({ data }) => {\n    const [show, setShow] = useState(false);\n    const moreButtonHandler = (ev) => {\n        ev.preventDefault();\n        setShow(prevState => !prevState);\n    }\n    if (!data)\n        return (\n            <tr>\n                <td colSpan={3}>\n                    <span className=\"name\">No Data found</span>\n                </td>\n            </tr>\n        );\n\n\n    return (\n        <tr>\n            <td>\n                <span className=\"name\">{data.name}</span>\n            </td>\n            <td>\n                <div className=\"more\">\n                    <Link to={`${RouteNames.cityEdit}/${data._id}`}><i className=\"fa fa-pencil\" aria-hidden=\"true\"></i></Link>\n                    {/* <li><Link to=\"#\">delete</Link></li> */}\n                </div>\n            </td>\n        </tr>\n    )\n}\n\nexport default Item\n","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\skills\\components\\Item.js",["761","762"],"import React, { useState } from 'react'\nimport { Link } from \"react-router-dom\";\nimport { RouteNames } from '../../../../constants/RouteNames';\nconst Item = ({ data }) => {\n    const [show, setShow] = useState(false);\n    const moreButtonHandler = (ev) => {\n        ev.preventDefault();\n        setShow(prevState => !prevState);\n    }\n    if (!data)\n        return (\n            <tr>\n                <td colSpan={3}>\n                    <span className=\"name\">No Data found</span>\n                </td>\n            </tr>\n        );\n\n\n    return (\n        <tr>\n            <td>\n                <span className=\"name\">{data.name}</span>\n            </td>\n            <td>\n                <div className=\"more\">\n                    <Link to={`${RouteNames.skillEdit}/${data._id}`}><i className=\"fa fa-pencil\" aria-hidden=\"true\"></i></Link>\n                    {/* <li><Link to=\"#\">delete</Link></li> */}\n                </div>\n            </td>\n        </tr>\n    )\n}\n\nexport default Item\n","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\education\\EducationList.js",["763"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { RouteNames } from '../../../constants/RouteNames';\nimport BaseList from '../../../reuseable/BaseList';\nimport Item from './components/Item';\nimport { getEducation } from '../../../store/actions/master';\nimport { toggleLoader } from '../../../store/actions/auth';\nimport { Redirect } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport BasePagination from '../../../reuseable/BasePagination';\n\nfunction EducationList() {\n    const HeadingTitle = [\n        'Name',\n        'aciton'\n    ];\n\n    const [geteducationData, setCitiesData] = useState([]);\n    const dispatch = useDispatch();\n    const [pageInfo, setPageInfo] = useState({});\n\n    const _loadMoreItems = (filter = {}) => {\n        dispatch(toggleLoader(true));\n        getEducation(filter).then(response => {\n            dispatch(toggleLoader(false));\n            if (!response.error) {\n                setCitiesData(response.data);\n                if (response.data.extra)\n                    setPageInfo(response.data.extra);\n            }\n            if (response.redirect)\n                userReauthenticate(response);\n        });\n    }\n\n    const [redirect, setRedirect] = useState(false);\n    const userReauthenticate = ({ message }) => {\n        toast.error(message, {\n            onOpen: () => setRedirect(true)\n        });\n    }\n\n    useEffect(() => {\n        _loadMoreItems();\n    }, []);\n\n    //console.log(branches);\n\n    if (redirect)\n        return <Redirect to=\"/login\" />\n\n    return (\n        <BaseList\n            addButton={RouteNames.educationAdd}\n            listHeading={HeadingTitle}\n            pageTitle='Education'\n            pagination={<BasePagination\n                pages={pageInfo}\n                onPaginate={_loadMoreItems}\n            />}\n        >\n            {geteducationData.length > 0 ? geteducationData.map(cityval => <Item key={cityval._id} data={cityval} />)\n                : <tr>\n                    <td colSpan={6} className=\"text-center\">\n                        <span className=\"name\">No Data found</span>\n                    </td>\n                </tr>\n            }\n        </BaseList>\n    )\n}\n\nexport default EducationList\n","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\education\\EducationEdit.js",["764","765","766","767","768","769","770","771","772","773","774"],"import React, { useState, useEffect } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { useDispatch } from 'react-redux';\nimport { RouteNames } from '../../../constants/RouteNames';\nimport DefaultStructure from '../../../layouts/defaultStructure';\nimport BaseForm from '../../../reuseable/base-form';\nimport useForm from '../../../reuseable/hooks/useForm';\nimport { addEducation, getEducationById, updateEducation } from '../../../store/actions/master';\nimport { toggleLoader } from '../../../store/actions/auth';\nimport Bredcrumb from '../../../reuseable/Bredcrumb';\n\nconst EducationEdit = (props) => {\n    const { id } = useParams();\n    const dispatch = useDispatch();\n    const [redirectToList, setRedirectToList] = useState(false);\n    const [loadState, setLoadState] = useState(false);\n    const [loadCity, setLoadCity] = useState(false);\n    const [states, setStates] = useState([]);\n    const [cities, setCities] = useState([]);\n    const [isSubmitBtnPressed, setIsSubmitBtnPressed] = useState(false);\n\n    const [redirect, setRedirect] = useState(false);\n    const userReauthenticate = ({ message }) => {\n        toast.error(message, {\n            onOpen: () => setRedirect(true)\n        });\n    }\n\n    const [state, inputHandler, _, updateForm] = useForm(\n        {\n            name: {\n                value: '',\n                isValid: false,\n                isTouched: false\n            }\n            \n        },\n        false\n    );\n\n    const _setFormData = (data) => {\n        let formatedData = {};\n        for (const _k in data) {\n            formatedData[_k] = {\n                value: data[_k],\n                isValid: true,\n                isTouched: true\n            }\n        }\n\n        return formatedData;\n    }\n\n    const _setSubmitableData = (data) => {\n        let formData = {};\n\n        for (const k in data) {\n            formData[k] = data[k].value;\n        }\n\n        return formData;\n    }\n\n    useEffect(() => {\n        //setLoadState(true);\n        /* getStates().then(resp => {\n            setStates(resp.data);\n            setLoadState(false);\n        }) */\n\n        if (id) {\n            dispatch(toggleLoader(true));\n\n            getEducationById(id).then(\n                response => {\n                    dispatch(toggleLoader(false));\n                    if (!response.error) {\n                        if(response.data[0]){\n                            updateForm(_setFormData(response.data[0]), true);\n                        }else{\n                            updateForm(_setFormData(response.data), true);\n                        }\n                        \n                        if( response.data.state_id ){\n                            setLoadCity(true);\n                            //__loadCities(response.data.state_id);\n                        }\n                        \n                    }\n                    if (response.redirect)\n                        userReauthenticate(response);\n                }\n            ).catch(error => {\n                console.log(error);\n            });\n        }\n    }, [id]);\n    useEffect(()=>{\n       \n    },[])\n\n    //console.log(state.inputs);\n\n    const handleFormSubmit = (ev) => {\n\n        ev.preventDefault();\n        setIsSubmitBtnPressed(true);\n        const { inputs, formValidity } = state;\n        console.log(formValidity)\n        if (formValidity) {\n            dispatch(toggleLoader(true));\n\n            if(!id){\n                addEducation(_setSubmitableData(inputs)).then(result => {\n                    if (!result.error) {\n                        dispatch(toggleLoader(false));\n                        toast.success(result.message,\n                            { onOpen: () => setRedirectToList(true) }\n                        );\n                    }\n                    if (result.redirect)\n                        userReauthenticate(result);\n                });\n            }\n\n            if(id){\n                updateEducation(_setSubmitableData(inputs)).then(result => {\n                    if (!result.error) {\n                        dispatch(toggleLoader(false));\n                        toast.success(result.message,\n                            { onOpen: () => setRedirectToList(true) }\n                        );\n                    }\n                    if (result.redirect)\n                        userReauthenticate(result);\n                });\n            }\n           /*  if (!id)\n                addBranch(_setSubmitableData(inputs)).then(result => {\n                    if (!result.error) {\n                        dispatch(toggleLoader(false));\n                        toast.success(result.message,\n                            { onOpen: () => setRedirectToList(true) }\n                        );\n                    }\n                    if (result.redirect)\n                        userReauthenticate(result);\n                });\n\n            if (id)\n                updateBranch(_setSubmitableData(inputs)).then(result => {\n                    if (!result.error) {\n                        dispatch(toggleLoader(false));\n                        toast.success(result.message,\n                            { onOpen: () => setRedirectToList(true) }\n                        );\n                    }\n                    if (result.redirect)\n                        userReauthenticate(result);\n                }); */\n        }\n    }\n\n    const FormHandler = () => {\n        return (\n            <div className=\"submitdiv\">\n                <input type=\"submit\" name=\"\" value=\"submit\" onClick={handleFormSubmit} />\n            </div>\n        );\n    }\n\n    const _handleState = ({ target: { value } }) => {\n        inputHandler('state_id', value);\n        /* setLoadCity(true);\n        inputHandler('state_id', value);\n        __loadCities(value); */\n    }\n\n    const __loadCities = (stateId) => {\n       /*  getCitiesByState(stateId).then(resp => {\n            if (resp.data)\n                setCities(resp.data);\n            setLoadCity(false);\n        }).catch(error => {\n            setLoadCity(false);\n        }) */\n    }\n\n    if (redirect)\n        return <Redirect to=\"/login\" />\n\n    if (redirectToList)\n        return (\n            <Redirect to={RouteNames.education} />\n        )\n\n    return (\n        <DefaultStructure pageTitle='Education Add/Edit Form'>\n            <Bredcrumb\n                leading={{ title: 'Education', url: RouteNames.education }}\n                trailing={{ title: 'Add-Edit Form', url: '#' }}\n            />\n            <BaseForm buttonSection={<FormHandler />}>\n                <div className=\"form-group\">\n                    <label>Name <em>*</em></label>\n                    <input\n                        type=\"text\"\n                        name=\"\"\n                        value={state.inputs.name.value}\n                        onChange={(e) => inputHandler('name', e.target.value)}\n                    //onBlur={() => touchHandler('name') }\n                    />\n                    {!state.formValidity && isSubmitBtnPressed && state.inputs.name.value === '' &&\n                        <span className=\"invalid\">Name is required field.</span>\n                    }\n                </div>\n\n               \n                \n            </BaseForm>\n        </DefaultStructure>\n    )\n}\n\nexport default EducationEdit;\n","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\education\\components\\Item.js",["775","776"],"import React, { useState } from 'react'\nimport { Link } from \"react-router-dom\";\nimport { RouteNames } from '../../../../constants/RouteNames';\nconst Item = ({ data }) => {\n    const [show, setShow] = useState(false);\n    const moreButtonHandler = (ev) => {\n        ev.preventDefault();\n        setShow(prevState => !prevState);\n    }\n    if (!data)\n        return (\n            <tr>\n                <td colSpan={3}>\n                    <span className=\"name\">No Data found</span>\n                </td>\n            </tr>\n        );\n\n\n    return (\n        <tr>\n            <td>\n                <span className=\"name\">{data.name}</span>\n            </td>\n            <td>\n                <div className=\"more\">\n                    <Link to={`${RouteNames.educationEdit}/${data._id}`}><i className=\"fa fa-pencil\" aria-hidden=\"true\"></i></Link>\n                    {/* <li><Link to=\"#\">delete</Link></li> */}\n                </div>\n            </td>\n        </tr>\n    )\n}\n\nexport default Item\n","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\qualification\\QualificationEdit.js",["777","778","779","780","781","782","783","784","785","786","787"],"import React, { useState, useEffect } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { useDispatch } from 'react-redux';\nimport { RouteNames } from '../../../constants/RouteNames';\nimport DefaultStructure from '../../../layouts/defaultStructure';\nimport BaseForm from '../../../reuseable/base-form';\nimport useForm from '../../../reuseable/hooks/useForm';\nimport { addEducation, getEducationById, updateEducation } from '../../../store/actions/master';\nimport { toggleLoader } from '../../../store/actions/auth';\nimport Bredcrumb from '../../../reuseable/Bredcrumb';\n\nconst QualificationEdit = (props) => {\n    const { id } = useParams();\n    const dispatch = useDispatch();\n    const [redirectToList, setRedirectToList] = useState(false);\n    const [loadState, setLoadState] = useState(false);\n    const [loadCity, setLoadCity] = useState(false);\n    const [states, setStates] = useState([]);\n    const [cities, setCities] = useState([]);\n    const [isSubmitBtnPressed, setIsSubmitBtnPressed] = useState(false);\n\n    const [redirect, setRedirect] = useState(false);\n    const userReauthenticate = ({ message }) => {\n        toast.error(message, {\n            onOpen: () => setRedirect(true)\n        });\n    }\n\n    const [state, inputHandler, _, updateForm] = useForm(\n        {\n            name: {\n                value: '',\n                isValid: false,\n                isTouched: false\n            }\n            \n        },\n        false\n    );\n\n    const _setFormData = (data) => {\n        let formatedData = {};\n        for (const _k in data) {\n            formatedData[_k] = {\n                value: data[_k],\n                isValid: true,\n                isTouched: true\n            }\n        }\n\n        return formatedData;\n    }\n\n    const _setSubmitableData = (data) => {\n        let formData = {};\n\n        for (const k in data) {\n            formData[k] = data[k].value;\n        }\n\n        return formData;\n    }\n\n    useEffect(() => {\n        //setLoadState(true);\n        /* getStates().then(resp => {\n            setStates(resp.data);\n            setLoadState(false);\n        }) */\n\n        if (id) {\n            dispatch(toggleLoader(true));\n\n            getEducationById(id).then(\n                response => {\n                    dispatch(toggleLoader(false));\n                    if (!response.error) {\n                        updateForm(_setFormData(response.data), true);\n                        if( response.data.state_id ){\n                            setLoadCity(true);\n                            //__loadCities(response.data.state_id);\n                        }\n                        \n                    }\n                    if (response.redirect)\n                        userReauthenticate(response);\n                }\n            ).catch(error => {\n                console.log(error);\n            });\n        }\n    }, [id]);\n    useEffect(()=>{\n       \n    },[])\n\n    //console.log(state.inputs);\n\n    const handleFormSubmit = (ev) => {\n\n        ev.preventDefault();\n        setIsSubmitBtnPressed(true);\n        const { inputs, formValidity } = state;\n        console.log(formValidity)\n        if (formValidity) {\n            dispatch(toggleLoader(true));\n\n            if(!id){\n                addEducation(_setSubmitableData(inputs)).then(result => {\n                    if (!result.error) {\n                        dispatch(toggleLoader(false));\n                        toast.success(result.message,\n                            { onOpen: () => setRedirectToList(true) }\n                        );\n                    }\n                    if (result.redirect)\n                        userReauthenticate(result);\n                });\n            }\n\n            if(id){\n                updateEducation(_setSubmitableData(inputs)).then(result => {\n                    if (!result.error) {\n                        dispatch(toggleLoader(false));\n                        toast.success(result.message,\n                            { onOpen: () => setRedirectToList(true) }\n                        );\n                    }\n                    if (result.redirect)\n                        userReauthenticate(result);\n                });\n            }\n           /*  if (!id)\n                addBranch(_setSubmitableData(inputs)).then(result => {\n                    if (!result.error) {\n                        dispatch(toggleLoader(false));\n                        toast.success(result.message,\n                            { onOpen: () => setRedirectToList(true) }\n                        );\n                    }\n                    if (result.redirect)\n                        userReauthenticate(result);\n                });\n\n            if (id)\n                updateBranch(_setSubmitableData(inputs)).then(result => {\n                    if (!result.error) {\n                        dispatch(toggleLoader(false));\n                        toast.success(result.message,\n                            { onOpen: () => setRedirectToList(true) }\n                        );\n                    }\n                    if (result.redirect)\n                        userReauthenticate(result);\n                }); */\n        }\n    }\n\n    const FormHandler = () => {\n        return (\n            <div className=\"submitdiv\">\n                <input type=\"submit\" name=\"\" value=\"submit\" onClick={handleFormSubmit} />\n            </div>\n        );\n    }\n\n    const _handleState = ({ target: { value } }) => {\n        inputHandler('state_id', value);\n        /* setLoadCity(true);\n        inputHandler('state_id', value);\n        __loadCities(value); */\n    }\n\n    const __loadCities = (stateId) => {\n       /*  getCitiesByState(stateId).then(resp => {\n            if (resp.data)\n                setCities(resp.data);\n            setLoadCity(false);\n        }).catch(error => {\n            setLoadCity(false);\n        }) */\n    }\n\n    if (redirect)\n        return <Redirect to=\"/login\" />\n\n    if (redirectToList)\n        return (\n            <Redirect to={RouteNames.qualification} />\n        )\n\n    return (\n        <DefaultStructure pageTitle='education Add/Edit Form'>\n            <Bredcrumb\n                leading={{ title: 'Qualification', url: RouteNames.qualification }}\n                trailing={{ title: 'Add-Edit Form', url: '#' }}\n            />\n            <BaseForm buttonSection={<FormHandler />}>\n                <div className=\"form-group\">\n                    <label>Name <em>*</em></label>\n                    <input\n                        type=\"text\"\n                        name=\"\"\n                        value={state.inputs.name.value}\n                        onChange={(e) => inputHandler('name', e.target.value)}\n                    //onBlur={() => touchHandler('name') }\n                    />\n                    {!state.formValidity && isSubmitBtnPressed && state.inputs.name.value === '' &&\n                        <span className=\"invalid\">Name is required field.</span>\n                    }\n                </div>\n\n               \n                \n            </BaseForm>\n        </DefaultStructure>\n    )\n}\n\nexport default QualificationEdit;\n","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\qualification\\QualificationList.js",["788"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { RouteNames } from '../../../constants/RouteNames';\nimport BaseList from '../../../reuseable/BaseList';\nimport Item from './components/Item';\nimport { getEducation } from '../../../store/actions/master';\nimport { toggleLoader } from '../../../store/actions/auth';\nimport { Redirect } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport BasePagination from '../../../reuseable/BasePagination';\n\nfunction QualificationList() {\n    const HeadingTitle = [\n        'Name',\n        'aciton'\n    ];\n\n    const [geteducationData, setCitiesData] = useState([]);\n    const dispatch = useDispatch();\n    const [pageInfo, setPageInfo] = useState({});\n\n    const _loadMoreItems = (filter = {}) => {\n        dispatch(toggleLoader(true));\n        getEducation(filter).then(response => {\n            dispatch(toggleLoader(false));\n            if (!response.error){\n                setCitiesData(response.data);\n                if( response.data.extra )\n                    setPageInfo(response.data.extra);\n            }\n            if (response.redirect)\n                userReauthenticate(response);\n        });\n    }\n\n    const [redirect, setRedirect] = useState(false);\n    const userReauthenticate = ({ message }) => {\n        toast.error(message, {\n            onOpen: () => setRedirect(true)\n        });\n    }\n\n    useEffect(() => {\n        _loadMoreItems();\n    }, []);\n\n    //console.log(branches);\n\n    if (redirect)\n        return <Redirect to=\"/login\" />\n\n    return (\n        <BaseList\n            addButton={RouteNames.qualificationAdd}\n            listHeading={HeadingTitle}\n            pageTitle='Qualification'\n            pagination={<BasePagination\n                pages={pageInfo}\n                onPaginate={_loadMoreItems}\n            />}\n        >\n            { geteducationData.length > 0 ? geteducationData.map(cityval => <Item key={cityval._id} data={cityval} />)\n                : <tr>\n                    <td colSpan={6} className=\"text-center\">\n                        <span className=\"name\">No Data found</span>\n                    </td>\n                </tr>\n            }\n        </BaseList>\n    )\n}\n\nexport default QualificationList\n","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\qualification\\components\\Item.js",["789","790"],"import React, { useState } from 'react'\nimport { Link } from \"react-router-dom\";\nimport { RouteNames } from '../../../../constants/RouteNames';\nconst Item = ({ data }) => {\n    const [show, setShow] = useState(false);\n    const moreButtonHandler = (ev) => {\n        ev.preventDefault();\n        setShow(prevState => !prevState);\n    }\n    if (!data)\n        return (\n            <tr>\n                <td colSpan={3}>\n                    <span className=\"name\">No Data found</span>\n                </td>\n            </tr>\n        );\n\n\n    return (\n        <tr>\n            <td>\n                <span className=\"name\">{data.name}</span>\n            </td>\n            <td>\n                <div className=\"more\">\n                    <Link to={`${RouteNames.qualificationEdit}/${data._id}`}><i className=\"fa fa-pencil\" aria-hidden=\"true\"></i></Link>\n                    {/* <li><Link to=\"#\">delete</Link></li> */}\n                </div>\n            </td>\n        </tr>\n    )\n}\n\nexport default Item\n","D:\\Other company project\\Pixel-Kolkata-company\\job-portal\\job-portal-backend\\src\\Pages\\masters\\job-master\\JobMaster.js",[],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\index.js",[],["791","792"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\reportWebVitals.js",[],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\App.js",[],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\providers\\app.js",[],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\navigations\\default-navigation.js",[],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\reuseable\\Loader.js",["793"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\error-handling\\ErrorBoundary.js",[],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\navigations\\auth-navigation.js",[],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\FallBackLoader.js",[],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\constants\\RouteNames.js",[],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\auth\\Login.js",[],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\dashboard\\Dashboard.js",["794","795","796","797","798","799"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\auth\\RegeneratePassword.js",[],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\users-admin\\UserEdit.js",["800","801","802","803","804","805","806","807","808","809"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\users-admin\\UsersList.js",["810"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\404\\NotFound.js",[],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\user-chat\\List.js",["811","812"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\error-handling\\components\\Error.js",["813"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Error(props) {\n  return (\n    <div className=\"errorholder\">\n      <h1>Something went wrong.</h1>\n      <h3>Please contact to Admin</h3>\n    </div>\n  );\n}\n\nexport default Error;\n","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\user-chat\\Chat.js",["814"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\store\\reducers\\master.js",["815"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\global-notifications\\GlobalNotifications.js",["816","817","818"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\store\\reducers\\auth.js",["819","820"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\states\\StateEdit.js",["821","822","823","824","825","826","827","828","829","830","831","832","833","834","835","836","837"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\states\\StateList.js",["838"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\job-master\\JobMaster.js",["839","840","841","842"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\cities\\CityList.js",["843"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\cities\\CityEdit.js",["844","845","846","847","848","849","850","851"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\skills\\SkillList.js",["852","853"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\education\\EducationList.js",["854"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { RouteNames } from '../../../constants/RouteNames';\nimport BaseList from '../../../reuseable/BaseList';\nimport Item from './components/Item';\nimport { getEducation } from '../../../store/actions/master';\nimport { toggleLoader } from '../../../store/actions/auth';\nimport { Redirect } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport BasePagination from '../../../reuseable/BasePagination';\n\nfunction EducationList() {\n    const HeadingTitle = [\n        'Name',\n        'aciton'\n    ];\n\n    const [geteducationData, setCitiesData] = useState([]);\n    const dispatch = useDispatch();\n    const [pageInfo, setPageInfo] = useState({});\n\n    const _loadMoreItems = (filter = {}) => {\n        dispatch(toggleLoader(true));\n        getEducation(filter).then(response => {\n            dispatch(toggleLoader(false));\n            if (!response.error){\n                setCitiesData(response.data);\n                if( response.data.extra )\n                    setPageInfo(response.data.extra);\n            }\n            if (response.redirect)\n                userReauthenticate(response);\n        });\n    }\n\n    const [redirect, setRedirect] = useState(false);\n    const userReauthenticate = ({ message }) => {\n        toast.error(message, {\n            onOpen: () => setRedirect(true)\n        });\n    }\n\n    useEffect(() => {\n        _loadMoreItems();\n    }, []);\n\n    //console.log(branches);\n\n    if (redirect)\n        return <Redirect to=\"/login\" />\n\n    return (\n        <BaseList\n            addButton={RouteNames.educationAdd}\n            listHeading={HeadingTitle}\n            pageTitle='Education'\n            pagination={<BasePagination\n                pages={pageInfo}\n                onPaginate={_loadMoreItems}\n            />}\n        >\n            { geteducationData.length > 0 ? geteducationData.map(cityval => <Item key={cityval._id} data={cityval} />)\n                : <tr>\n                    <td colSpan={6} className=\"text-center\">\n                        <span className=\"name\">No Data found</span>\n                    </td>\n                </tr>\n            }\n        </BaseList>\n    )\n}\n\nexport default EducationList\n","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\qualification\\QualificationList.js",["855"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\education\\EducationEdit.js",["856","857","858","859","860","861","862","863","864","865","866"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\skills\\SkillEdit.js",["867","868","869","870","871","872","873","874","875","876","877"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\qualification\\QualificationEdit.js",["878","879","880","881","882","883","884","885","886","887","888"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\companytype\\CompanyTypeList.js",["889","890","891"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\companytype\\CompanyTypeEdit.js",["892","893","894","895","896","897","898","899","900","901","902","903","904","905","906","907","908","909","910"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\reuseable\\BaseImageList.js",["911","912","913"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\reuseable\\Bredcrumb.js",[],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\reuseable\\base-form.js",[],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\reuseable\\BaseList.js",["914"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\reuseable\\BasePagination.js",["915","916","917","918"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\reuseable\\hooks\\useForm.js",[],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\store\\actions\\auth.js",[],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\store\\actions\\dashboard.js",[],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\store\\actions\\user.js",[],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\store\\actions\\chat.js",[],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\store\\actions\\master.js",[],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\dashboard\\components\\TotalCard.js",[],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\layouts\\defaultStructure.js",[],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\users-admin\\components\\Item.js",["919","920"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\user-chat\\components\\ChatRoom.js",[],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\user-chat\\components\\Item.js",["921","922","923","924","925","926","927","928","929"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\companytype\\components\\Item.js",["930","931"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\qualification\\components\\Item.js",["932","933"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\education\\components\\Item.js",["934","935"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\store\\actions\\globalNotification.js",[],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\cities\\components\\Item.js",["936","937"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\skills\\components\\Item.js",["938","939"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\masters\\states\\components\\Item.js",["940","941"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\global-notifications\\components\\UserList.js",[],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\global-notifications\\components\\Filter.js",[],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\store\\actions\\HttpRequest.js",["942","943"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\layouts\\Footer.js",[],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\layouts\\TopBar.js",["944"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport NotificationsAlert from \"./components/NotificationsAlert\";\nimport { adjustSideBar } from \"../store/actions/auth\";\n\nconst TopBar = ({ title }) => {\n  const sideBarStatus = useSelector((state) => state.auth.sideBarStatus);\n\n  const dispatch = useDispatch();\n\n  const _updateSideBarStatus = (status) => {\n    dispatch(adjustSideBar(status));\n  };\n\n  return (\n    <div className=\"top_panel\">\n      <div className=\"top_panel_top clear\">\n        <Link to=\"/\" className={sideBarStatus ? \"logo logoOpen\" : \"logo\"}>\n          {\" \"}\n        </Link>\n\n        <a\n          href=\"#\"\n          className={sideBarStatus ? \"menu closebtn\" : \"menu openbtn\"}\n          onClick={() => _updateSideBarStatus(!sideBarStatus)}\n        >\n          {\" \"}\n        </a>\n\n        <h2 className=\"title\">{title || \"E-Edge\"}</h2>\n        <div className=\"topright\">\n          <div className=\"account\">\n            <NotificationsAlert />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TopBar;\n","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\layouts\\SideBar.js",[],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\user-chat\\components\\ChatSearchItem.js",[],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\Pages\\user-chat\\components\\ChatMessage.js",["945"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\helpers\\helper.js",[],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\constants\\api-config.js",["946"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\layouts\\components\\NotificationsAlert.js",["947","948"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\layouts\\components\\SideBarItem.js",["949"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\layouts\\components\\UserProfile.js",["950","951"],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\layouts\\components\\Job.jsx",["952"],"import React from \"react\";\r\n\r\nfunction ellipsify(str) {\r\n  if (str.length > 10) {\r\n    return str.substring(0, 200) + \"...\";\r\n  } else {\r\n    return str;\r\n  }\r\n}\r\n\r\nconst Job = ({ title, description, companyName, companyAddress, location }) => {\r\n  return (\r\n    <div className=\"card\" style={{ width: \"30rem\" }}>\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{title}</h5>\r\n        <h6 className=\"card-subtitle mb-2 \">{companyName}</h6>\r\n        <h6 className=\"card-subtitle mb-2 \">{companyAddress}</h6>\r\n        <h6 className=\"card-subtitle mb-2 text-muted\">{location}</h6>\r\n\r\n        <p className=\"card-text\">{ellipsify(description)}</p>\r\n        <ul style={{ listStyleType: \"circle\" }}>\r\n          <li>first role to perform</li>\r\n          <li>second role to perform</li>\r\n          <li>third role to perform</li>\r\n        </ul>\r\n        <a href=\"#\" className=\"card-link\">\r\n          Job Link\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Job;\r\n","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\graphql\\client.js",["953","954","955"],"import {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  useQuery,\r\n  gql,\r\n} from \"@apollo/client\";\r\n\r\nexport const client = new ApolloClient({\r\n  uri: \"https://api.graphql.jobs/\",\r\n  cache: new InMemoryCache(),\r\n});\r\n","C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\graphql\\queries\\jobQuery.js",[],"C:\\Users\\TM\\Desktop\\job-portal-backend\\src\\layouts\\components\\JobFilter.jsx",["956","957"],{"ruleId":"958","replacedBy":"959"},{"ruleId":"960","replacedBy":"961"},{"ruleId":"962","severity":1,"message":"963","line":2,"column":10,"nodeType":"964","messageId":"965","endLine":2,"endColumn":21},{"ruleId":"962","severity":1,"message":"966","line":6,"column":10,"nodeType":"964","messageId":"965","endLine":6,"endColumn":23},{"ruleId":"962","severity":1,"message":"967","line":15,"column":31,"nodeType":"964","messageId":"965","endLine":15,"endColumn":51},{"ruleId":"968","severity":1,"message":"969","line":26,"column":7,"nodeType":"970","endLine":26,"endColumn":9,"suggestions":"971"},{"ruleId":"962","severity":1,"message":"972","line":45,"column":11,"nodeType":"964","messageId":"965","endLine":45,"endColumn":25},{"ruleId":"962","severity":1,"message":"973","line":50,"column":11,"nodeType":"964","messageId":"965","endLine":50,"endColumn":30},{"ruleId":"962","severity":1,"message":"974","line":54,"column":11,"nodeType":"964","messageId":"965","endLine":54,"endColumn":23},{"ruleId":"968","severity":1,"message":"975","line":36,"column":8,"nodeType":"970","endLine":36,"endColumn":10,"suggestions":"976"},{"ruleId":"962","severity":1,"message":"977","line":9,"column":47,"nodeType":"964","messageId":"965","endLine":9,"endColumn":58},{"ruleId":"962","severity":1,"message":"978","line":10,"column":10,"nodeType":"964","messageId":"965","endLine":10,"endColumn":19},{"ruleId":"962","severity":1,"message":"979","line":21,"column":13,"nodeType":"964","messageId":"965","endLine":21,"endColumn":19},{"ruleId":"962","severity":1,"message":"980","line":21,"column":21,"nodeType":"964","messageId":"965","endLine":21,"endColumn":30},{"ruleId":"962","severity":1,"message":"981","line":22,"column":13,"nodeType":"964","messageId":"965","endLine":22,"endColumn":21},{"ruleId":"962","severity":1,"message":"982","line":22,"column":23,"nodeType":"964","messageId":"965","endLine":22,"endColumn":34},{"ruleId":"962","severity":1,"message":"983","line":23,"column":25,"nodeType":"964","messageId":"965","endLine":23,"endColumn":39},{"ruleId":"962","severity":1,"message":"984","line":73,"column":33,"nodeType":"964","messageId":"965","endLine":73,"endColumn":34},{"ruleId":"968","severity":1,"message":"985","line":121,"column":7,"nodeType":"970","endLine":121,"endColumn":11,"suggestions":"986"},{"ruleId":"962","severity":1,"message":"987","line":125,"column":11,"nodeType":"964","messageId":"965","endLine":125,"endColumn":29},{"ruleId":"962","severity":1,"message":"988","line":2,"column":10,"nodeType":"964","messageId":"965","endLine":2,"endColumn":14},{"ruleId":"968","severity":1,"message":"989","line":64,"column":8,"nodeType":"970","endLine":64,"endColumn":10,"suggestions":"990"},{"ruleId":"962","severity":1,"message":"991","line":1,"column":26,"nodeType":"964","messageId":"965","endLine":1,"endColumn":35},{"ruleId":"962","severity":1,"message":"992","line":3,"column":8,"nodeType":"964","messageId":"965","endLine":3,"endColumn":14},{"ruleId":"962","severity":1,"message":"993","line":23,"column":11,"nodeType":"964","messageId":"965","endLine":23,"endColumn":29},{"ruleId":"962","severity":1,"message":"994","line":4,"column":10,"nodeType":"964","messageId":"965","endLine":4,"endColumn":20},{"ruleId":"968","severity":1,"message":"995","line":44,"column":8,"nodeType":"970","endLine":44,"endColumn":10,"suggestions":"996"},{"ruleId":"997","severity":1,"message":"998","line":15,"column":1,"nodeType":"999","endLine":65,"endColumn":2},{"ruleId":"1000","severity":1,"message":"1001","line":16,"column":5,"nodeType":"1002","messageId":"1003","endLine":62,"endColumn":6},{"ruleId":"997","severity":1,"message":"998","line":13,"column":1,"nodeType":"999","endLine":19,"endColumn":2},{"ruleId":"962","severity":1,"message":"1004","line":9,"column":10,"nodeType":"964","messageId":"965","endLine":9,"endColumn":19},{"ruleId":"962","severity":1,"message":"1005","line":9,"column":21,"nodeType":"964","messageId":"965","endLine":9,"endColumn":34},{"ruleId":"962","severity":1,"message":"1006","line":9,"column":36,"nodeType":"964","messageId":"965","endLine":9,"endColumn":48},{"ruleId":"962","severity":1,"message":"1007","line":9,"column":50,"nodeType":"964","messageId":"965","endLine":9,"endColumn":59},{"ruleId":"962","severity":1,"message":"1008","line":9,"column":61,"nodeType":"964","messageId":"965","endLine":9,"endColumn":77},{"ruleId":"962","severity":1,"message":"1009","line":17,"column":12,"nodeType":"964","messageId":"965","endLine":17,"endColumn":21},{"ruleId":"962","severity":1,"message":"1010","line":17,"column":23,"nodeType":"964","messageId":"965","endLine":17,"endColumn":35},{"ruleId":"962","severity":1,"message":"1011","line":18,"column":12,"nodeType":"964","messageId":"965","endLine":18,"endColumn":20},{"ruleId":"962","severity":1,"message":"1012","line":18,"column":22,"nodeType":"964","messageId":"965","endLine":18,"endColumn":33},{"ruleId":"962","severity":1,"message":"1013","line":19,"column":12,"nodeType":"964","messageId":"965","endLine":19,"endColumn":18},{"ruleId":"962","severity":1,"message":"1014","line":19,"column":20,"nodeType":"964","messageId":"965","endLine":19,"endColumn":29},{"ruleId":"962","severity":1,"message":"979","line":20,"column":12,"nodeType":"964","messageId":"965","endLine":20,"endColumn":18},{"ruleId":"962","severity":1,"message":"980","line":20,"column":20,"nodeType":"964","messageId":"965","endLine":20,"endColumn":29},{"ruleId":"962","severity":1,"message":"984","line":30,"column":33,"nodeType":"964","messageId":"965","endLine":30,"endColumn":34},{"ruleId":"968","severity":1,"message":"1015","line":97,"column":8,"nodeType":"970","endLine":97,"endColumn":12,"suggestions":"1016"},{"ruleId":"962","severity":1,"message":"1017","line":166,"column":11,"nodeType":"964","messageId":"965","endLine":166,"endColumn":23},{"ruleId":"962","severity":1,"message":"1018","line":172,"column":11,"nodeType":"964","messageId":"965","endLine":172,"endColumn":23},{"ruleId":"968","severity":1,"message":"975","line":45,"column":8,"nodeType":"970","endLine":45,"endColumn":10,"suggestions":"1019"},{"ruleId":"1020","severity":1,"message":"1021","line":39,"column":35,"nodeType":"1022","endLine":42,"endColumn":11},{"ruleId":"1020","severity":1,"message":"1021","line":46,"column":17,"nodeType":"1022","endLine":49,"endColumn":19},{"ruleId":"1020","severity":1,"message":"1021","line":54,"column":13,"nodeType":"1022","endLine":54,"endColumn":124},{"ruleId":"1020","severity":1,"message":"1023","line":64,"column":13,"nodeType":"1022","endLine":64,"endColumn":30},{"ruleId":"1024","severity":1,"message":"1025","line":67,"column":29,"nodeType":"1022","endLine":67,"endColumn":87},{"ruleId":"1026","severity":1,"message":"1027","line":16,"column":29,"nodeType":"1022","endLine":16,"endColumn":120},{"ruleId":"1028","severity":1,"message":"1029","line":17,"column":29,"nodeType":"1022","endLine":17,"endColumn":89},{"ruleId":"1024","severity":1,"message":"1025","line":17,"column":29,"nodeType":"1022","endLine":17,"endColumn":89},{"ruleId":"962","severity":1,"message":"1030","line":6,"column":13,"nodeType":"964","messageId":"965","endLine":6,"endColumn":17},{"ruleId":"962","severity":1,"message":"1031","line":7,"column":11,"nodeType":"964","messageId":"965","endLine":7,"endColumn":28},{"ruleId":"962","severity":1,"message":"991","line":1,"column":27,"nodeType":"964","messageId":"965","endLine":1,"endColumn":36},{"ruleId":"962","severity":1,"message":"1032","line":6,"column":10,"nodeType":"964","messageId":"965","endLine":6,"endColumn":15},{"ruleId":"962","severity":1,"message":"1033","line":8,"column":11,"nodeType":"964","messageId":"965","endLine":8,"endColumn":19},{"ruleId":"962","severity":1,"message":"1030","line":9,"column":12,"nodeType":"964","messageId":"965","endLine":9,"endColumn":16},{"ruleId":"962","severity":1,"message":"1034","line":10,"column":18,"nodeType":"964","messageId":"965","endLine":10,"endColumn":25},{"ruleId":"962","severity":1,"message":"1035","line":11,"column":12,"nodeType":"964","messageId":"965","endLine":11,"endColumn":18},{"ruleId":"962","severity":1,"message":"1036","line":11,"column":20,"nodeType":"964","messageId":"965","endLine":11,"endColumn":29},{"ruleId":"962","severity":1,"message":"1037","line":13,"column":11,"nodeType":"964","messageId":"965","endLine":13,"endColumn":31},{"ruleId":"962","severity":1,"message":"1038","line":48,"column":11,"nodeType":"964","messageId":"965","endLine":48,"endColumn":26},{"ruleId":"962","severity":1,"message":"1030","line":5,"column":12,"nodeType":"964","messageId":"965","endLine":5,"endColumn":16},{"ruleId":"962","severity":1,"message":"1031","line":6,"column":11,"nodeType":"964","messageId":"965","endLine":6,"endColumn":28},{"ruleId":"962","severity":1,"message":"1039","line":153,"column":19,"nodeType":"964","messageId":"965","endLine":153,"endColumn":25},{"ruleId":"962","severity":1,"message":"1039","line":171,"column":19,"nodeType":"964","messageId":"965","endLine":171,"endColumn":25},{"ruleId":"1024","severity":1,"message":"1025","line":23,"column":17,"nodeType":"1022","endLine":25,"endColumn":74},{"ruleId":"968","severity":1,"message":"1040","line":49,"column":8,"nodeType":"970","endLine":49,"endColumn":14,"suggestions":"1041"},{"ruleId":"1042","severity":1,"message":"1043","line":10,"column":41,"nodeType":"1044","messageId":"1045","endLine":10,"endColumn":43},{"ruleId":"1028","severity":1,"message":"1029","line":39,"column":17,"nodeType":"1022","endLine":39,"endColumn":126},{"ruleId":"1024","severity":1,"message":"1025","line":39,"column":17,"nodeType":"1022","endLine":39,"endColumn":126},{"ruleId":"968","severity":1,"message":"1046","line":10,"column":8,"nodeType":"970","endLine":10,"endColumn":10,"suggestions":"1047"},{"ruleId":"968","severity":1,"message":"1048","line":45,"column":8,"nodeType":"970","endLine":45,"endColumn":22,"suggestions":"1049"},{"ruleId":"1024","severity":1,"message":"1025","line":49,"column":13,"nodeType":"1022","endLine":49,"endColumn":86},{"ruleId":"968","severity":1,"message":"975","line":45,"column":8,"nodeType":"970","endLine":45,"endColumn":10,"suggestions":"1050"},{"ruleId":"962","severity":1,"message":"1010","line":17,"column":23,"nodeType":"964","messageId":"965","endLine":17,"endColumn":35},{"ruleId":"962","severity":1,"message":"1011","line":18,"column":12,"nodeType":"964","messageId":"965","endLine":18,"endColumn":20},{"ruleId":"962","severity":1,"message":"979","line":20,"column":12,"nodeType":"964","messageId":"965","endLine":20,"endColumn":18},{"ruleId":"962","severity":1,"message":"980","line":20,"column":20,"nodeType":"964","messageId":"965","endLine":20,"endColumn":29},{"ruleId":"962","severity":1,"message":"984","line":30,"column":33,"nodeType":"964","messageId":"965","endLine":30,"endColumn":34},{"ruleId":"968","severity":1,"message":"1015","line":97,"column":8,"nodeType":"970","endLine":97,"endColumn":12,"suggestions":"1051"},{"ruleId":"968","severity":1,"message":"1052","line":109,"column":7,"nodeType":"970","endLine":109,"endColumn":9,"suggestions":"1053"},{"ruleId":"962","severity":1,"message":"1018","line":187,"column":11,"nodeType":"964","messageId":"965","endLine":187,"endColumn":23},{"ruleId":"962","severity":1,"message":"1004","line":9,"column":10,"nodeType":"964","messageId":"965","endLine":9,"endColumn":19},{"ruleId":"962","severity":1,"message":"1005","line":9,"column":21,"nodeType":"964","messageId":"965","endLine":9,"endColumn":34},{"ruleId":"962","severity":1,"message":"1006","line":9,"column":36,"nodeType":"964","messageId":"965","endLine":9,"endColumn":48},{"ruleId":"962","severity":1,"message":"1007","line":9,"column":50,"nodeType":"964","messageId":"965","endLine":9,"endColumn":59},{"ruleId":"962","severity":1,"message":"1008","line":9,"column":61,"nodeType":"964","messageId":"965","endLine":9,"endColumn":77},{"ruleId":"962","severity":1,"message":"1054","line":9,"column":78,"nodeType":"964","messageId":"965","endLine":9,"endColumn":87},{"ruleId":"962","severity":1,"message":"1055","line":9,"column":88,"nodeType":"964","messageId":"965","endLine":9,"endColumn":95},{"ruleId":"962","severity":1,"message":"1056","line":9,"column":97,"nodeType":"964","messageId":"965","endLine":9,"endColumn":105},{"ruleId":"962","severity":1,"message":"1009","line":17,"column":12,"nodeType":"964","messageId":"965","endLine":17,"endColumn":21},{"ruleId":"962","severity":1,"message":"1010","line":17,"column":23,"nodeType":"964","messageId":"965","endLine":17,"endColumn":35},{"ruleId":"962","severity":1,"message":"1011","line":18,"column":12,"nodeType":"964","messageId":"965","endLine":18,"endColumn":20},{"ruleId":"962","severity":1,"message":"1013","line":19,"column":12,"nodeType":"964","messageId":"965","endLine":19,"endColumn":18},{"ruleId":"962","severity":1,"message":"1014","line":19,"column":20,"nodeType":"964","messageId":"965","endLine":19,"endColumn":29},{"ruleId":"962","severity":1,"message":"979","line":20,"column":12,"nodeType":"964","messageId":"965","endLine":20,"endColumn":18},{"ruleId":"962","severity":1,"message":"980","line":20,"column":20,"nodeType":"964","messageId":"965","endLine":20,"endColumn":29},{"ruleId":"962","severity":1,"message":"984","line":30,"column":33,"nodeType":"964","messageId":"965","endLine":30,"endColumn":34},{"ruleId":"968","severity":1,"message":"1015","line":93,"column":8,"nodeType":"970","endLine":93,"endColumn":12,"suggestions":"1057"},{"ruleId":"962","severity":1,"message":"1017","line":168,"column":11,"nodeType":"964","messageId":"965","endLine":168,"endColumn":23},{"ruleId":"962","severity":1,"message":"1018","line":175,"column":11,"nodeType":"964","messageId":"965","endLine":175,"endColumn":23},{"ruleId":"962","severity":1,"message":"978","line":6,"column":10,"nodeType":"964","messageId":"965","endLine":6,"endColumn":19},{"ruleId":"962","severity":1,"message":"1058","line":6,"column":21,"nodeType":"964","messageId":"965","endLine":6,"endColumn":30},{"ruleId":"968","severity":1,"message":"975","line":46,"column":8,"nodeType":"970","endLine":46,"endColumn":10,"suggestions":"1059"},{"ruleId":"962","severity":1,"message":"978","line":6,"column":10,"nodeType":"964","messageId":"965","endLine":6,"endColumn":19},{"ruleId":"968","severity":1,"message":"975","line":45,"column":8,"nodeType":"970","endLine":45,"endColumn":10,"suggestions":"1060"},{"ruleId":"962","severity":1,"message":"1009","line":17,"column":12,"nodeType":"964","messageId":"965","endLine":17,"endColumn":21},{"ruleId":"962","severity":1,"message":"1010","line":17,"column":23,"nodeType":"964","messageId":"965","endLine":17,"endColumn":35},{"ruleId":"962","severity":1,"message":"1011","line":18,"column":12,"nodeType":"964","messageId":"965","endLine":18,"endColumn":20},{"ruleId":"962","severity":1,"message":"1013","line":19,"column":12,"nodeType":"964","messageId":"965","endLine":19,"endColumn":18},{"ruleId":"962","severity":1,"message":"1014","line":19,"column":20,"nodeType":"964","messageId":"965","endLine":19,"endColumn":29},{"ruleId":"962","severity":1,"message":"979","line":20,"column":12,"nodeType":"964","messageId":"965","endLine":20,"endColumn":18},{"ruleId":"962","severity":1,"message":"980","line":20,"column":20,"nodeType":"964","messageId":"965","endLine":20,"endColumn":29},{"ruleId":"962","severity":1,"message":"984","line":30,"column":33,"nodeType":"964","messageId":"965","endLine":30,"endColumn":34},{"ruleId":"968","severity":1,"message":"1015","line":93,"column":8,"nodeType":"970","endLine":93,"endColumn":12,"suggestions":"1061"},{"ruleId":"962","severity":1,"message":"1017","line":168,"column":11,"nodeType":"964","messageId":"965","endLine":168,"endColumn":23},{"ruleId":"962","severity":1,"message":"1018","line":175,"column":11,"nodeType":"964","messageId":"965","endLine":175,"endColumn":23},{"ruleId":"962","severity":1,"message":"1030","line":5,"column":12,"nodeType":"964","messageId":"965","endLine":5,"endColumn":16},{"ruleId":"962","severity":1,"message":"1031","line":6,"column":11,"nodeType":"964","messageId":"965","endLine":6,"endColumn":28},{"ruleId":"962","severity":1,"message":"1030","line":5,"column":12,"nodeType":"964","messageId":"965","endLine":5,"endColumn":16},{"ruleId":"962","severity":1,"message":"1031","line":6,"column":11,"nodeType":"964","messageId":"965","endLine":6,"endColumn":28},{"ruleId":"962","severity":1,"message":"1030","line":5,"column":12,"nodeType":"964","messageId":"965","endLine":5,"endColumn":16},{"ruleId":"962","severity":1,"message":"1031","line":6,"column":11,"nodeType":"964","messageId":"965","endLine":6,"endColumn":28},{"ruleId":"968","severity":1,"message":"975","line":45,"column":8,"nodeType":"970","endLine":45,"endColumn":10,"suggestions":"1062"},{"ruleId":"962","severity":1,"message":"1009","line":17,"column":12,"nodeType":"964","messageId":"965","endLine":17,"endColumn":21},{"ruleId":"962","severity":1,"message":"1010","line":17,"column":23,"nodeType":"964","messageId":"965","endLine":17,"endColumn":35},{"ruleId":"962","severity":1,"message":"1011","line":18,"column":12,"nodeType":"964","messageId":"965","endLine":18,"endColumn":20},{"ruleId":"962","severity":1,"message":"1013","line":19,"column":12,"nodeType":"964","messageId":"965","endLine":19,"endColumn":18},{"ruleId":"962","severity":1,"message":"1014","line":19,"column":20,"nodeType":"964","messageId":"965","endLine":19,"endColumn":29},{"ruleId":"962","severity":1,"message":"979","line":20,"column":12,"nodeType":"964","messageId":"965","endLine":20,"endColumn":18},{"ruleId":"962","severity":1,"message":"980","line":20,"column":20,"nodeType":"964","messageId":"965","endLine":20,"endColumn":29},{"ruleId":"962","severity":1,"message":"984","line":30,"column":33,"nodeType":"964","messageId":"965","endLine":30,"endColumn":34},{"ruleId":"968","severity":1,"message":"1015","line":98,"column":8,"nodeType":"970","endLine":98,"endColumn":12,"suggestions":"1063"},{"ruleId":"962","severity":1,"message":"1017","line":173,"column":11,"nodeType":"964","messageId":"965","endLine":173,"endColumn":23},{"ruleId":"962","severity":1,"message":"1018","line":180,"column":11,"nodeType":"964","messageId":"965","endLine":180,"endColumn":23},{"ruleId":"962","severity":1,"message":"1030","line":5,"column":12,"nodeType":"964","messageId":"965","endLine":5,"endColumn":16},{"ruleId":"962","severity":1,"message":"1031","line":6,"column":11,"nodeType":"964","messageId":"965","endLine":6,"endColumn":28},{"ruleId":"962","severity":1,"message":"1009","line":17,"column":12,"nodeType":"964","messageId":"965","endLine":17,"endColumn":21},{"ruleId":"962","severity":1,"message":"1010","line":17,"column":23,"nodeType":"964","messageId":"965","endLine":17,"endColumn":35},{"ruleId":"962","severity":1,"message":"1011","line":18,"column":12,"nodeType":"964","messageId":"965","endLine":18,"endColumn":20},{"ruleId":"962","severity":1,"message":"1013","line":19,"column":12,"nodeType":"964","messageId":"965","endLine":19,"endColumn":18},{"ruleId":"962","severity":1,"message":"1014","line":19,"column":20,"nodeType":"964","messageId":"965","endLine":19,"endColumn":29},{"ruleId":"962","severity":1,"message":"979","line":20,"column":12,"nodeType":"964","messageId":"965","endLine":20,"endColumn":18},{"ruleId":"962","severity":1,"message":"980","line":20,"column":20,"nodeType":"964","messageId":"965","endLine":20,"endColumn":29},{"ruleId":"962","severity":1,"message":"984","line":30,"column":33,"nodeType":"964","messageId":"965","endLine":30,"endColumn":34},{"ruleId":"968","severity":1,"message":"1015","line":93,"column":8,"nodeType":"970","endLine":93,"endColumn":12,"suggestions":"1064"},{"ruleId":"962","severity":1,"message":"1017","line":168,"column":11,"nodeType":"964","messageId":"965","endLine":168,"endColumn":23},{"ruleId":"962","severity":1,"message":"1018","line":175,"column":11,"nodeType":"964","messageId":"965","endLine":175,"endColumn":23},{"ruleId":"968","severity":1,"message":"975","line":45,"column":8,"nodeType":"970","endLine":45,"endColumn":10,"suggestions":"1065"},{"ruleId":"962","severity":1,"message":"1030","line":5,"column":12,"nodeType":"964","messageId":"965","endLine":5,"endColumn":16},{"ruleId":"962","severity":1,"message":"1031","line":6,"column":11,"nodeType":"964","messageId":"965","endLine":6,"endColumn":28},{"ruleId":"958","replacedBy":"1066"},{"ruleId":"960","replacedBy":"1067"},{"ruleId":"962","severity":1,"message":"963","line":2,"column":10,"nodeType":"964","messageId":"965","endLine":2,"endColumn":21},{"ruleId":"962","severity":1,"message":"966","line":6,"column":10,"nodeType":"964","messageId":"965","endLine":6,"endColumn":23},{"ruleId":"962","severity":1,"message":"967","line":15,"column":31,"nodeType":"964","messageId":"965","endLine":15,"endColumn":51},{"ruleId":"968","severity":1,"message":"969","line":26,"column":7,"nodeType":"970","endLine":26,"endColumn":9,"suggestions":"1068"},{"ruleId":"962","severity":1,"message":"972","line":45,"column":11,"nodeType":"964","messageId":"965","endLine":45,"endColumn":25},{"ruleId":"962","severity":1,"message":"973","line":50,"column":11,"nodeType":"964","messageId":"965","endLine":50,"endColumn":30},{"ruleId":"962","severity":1,"message":"974","line":54,"column":11,"nodeType":"964","messageId":"965","endLine":54,"endColumn":23},{"ruleId":"962","severity":1,"message":"977","line":9,"column":47,"nodeType":"964","messageId":"965","endLine":9,"endColumn":58},{"ruleId":"962","severity":1,"message":"978","line":10,"column":10,"nodeType":"964","messageId":"965","endLine":10,"endColumn":19},{"ruleId":"962","severity":1,"message":"979","line":21,"column":13,"nodeType":"964","messageId":"965","endLine":21,"endColumn":19},{"ruleId":"962","severity":1,"message":"980","line":21,"column":21,"nodeType":"964","messageId":"965","endLine":21,"endColumn":30},{"ruleId":"962","severity":1,"message":"981","line":22,"column":13,"nodeType":"964","messageId":"965","endLine":22,"endColumn":21},{"ruleId":"962","severity":1,"message":"982","line":22,"column":23,"nodeType":"964","messageId":"965","endLine":22,"endColumn":34},{"ruleId":"962","severity":1,"message":"983","line":23,"column":25,"nodeType":"964","messageId":"965","endLine":23,"endColumn":39},{"ruleId":"962","severity":1,"message":"984","line":73,"column":33,"nodeType":"964","messageId":"965","endLine":73,"endColumn":34},{"ruleId":"968","severity":1,"message":"985","line":121,"column":7,"nodeType":"970","endLine":121,"endColumn":11,"suggestions":"1069"},{"ruleId":"962","severity":1,"message":"987","line":125,"column":11,"nodeType":"964","messageId":"965","endLine":125,"endColumn":29},{"ruleId":"968","severity":1,"message":"975","line":36,"column":8,"nodeType":"970","endLine":36,"endColumn":10,"suggestions":"1070"},{"ruleId":"962","severity":1,"message":"994","line":4,"column":10,"nodeType":"964","messageId":"965","endLine":4,"endColumn":20},{"ruleId":"968","severity":1,"message":"995","line":44,"column":8,"nodeType":"970","endLine":44,"endColumn":10,"suggestions":"1071"},{"ruleId":"962","severity":1,"message":"988","line":2,"column":10,"nodeType":"964","messageId":"965","endLine":2,"endColumn":14},{"ruleId":"968","severity":1,"message":"989","line":64,"column":8,"nodeType":"970","endLine":64,"endColumn":10,"suggestions":"1072"},{"ruleId":"997","severity":1,"message":"998","line":13,"column":1,"nodeType":"999","endLine":19,"endColumn":2},{"ruleId":"962","severity":1,"message":"991","line":1,"column":26,"nodeType":"964","messageId":"965","endLine":1,"endColumn":35},{"ruleId":"962","severity":1,"message":"992","line":3,"column":8,"nodeType":"964","messageId":"965","endLine":3,"endColumn":14},{"ruleId":"962","severity":1,"message":"993","line":23,"column":11,"nodeType":"964","messageId":"965","endLine":23,"endColumn":29},{"ruleId":"997","severity":1,"message":"998","line":15,"column":1,"nodeType":"999","endLine":65,"endColumn":2},{"ruleId":"1000","severity":1,"message":"1001","line":16,"column":5,"nodeType":"1002","messageId":"1003","endLine":62,"endColumn":6},{"ruleId":"962","severity":1,"message":"1004","line":9,"column":10,"nodeType":"964","messageId":"965","endLine":9,"endColumn":19},{"ruleId":"962","severity":1,"message":"1005","line":9,"column":21,"nodeType":"964","messageId":"965","endLine":9,"endColumn":34},{"ruleId":"962","severity":1,"message":"1006","line":9,"column":36,"nodeType":"964","messageId":"965","endLine":9,"endColumn":48},{"ruleId":"962","severity":1,"message":"1007","line":9,"column":50,"nodeType":"964","messageId":"965","endLine":9,"endColumn":59},{"ruleId":"962","severity":1,"message":"1008","line":9,"column":61,"nodeType":"964","messageId":"965","endLine":9,"endColumn":77},{"ruleId":"962","severity":1,"message":"1009","line":17,"column":12,"nodeType":"964","messageId":"965","endLine":17,"endColumn":21},{"ruleId":"962","severity":1,"message":"1010","line":17,"column":23,"nodeType":"964","messageId":"965","endLine":17,"endColumn":35},{"ruleId":"962","severity":1,"message":"1011","line":18,"column":12,"nodeType":"964","messageId":"965","endLine":18,"endColumn":20},{"ruleId":"962","severity":1,"message":"1012","line":18,"column":22,"nodeType":"964","messageId":"965","endLine":18,"endColumn":33},{"ruleId":"962","severity":1,"message":"1013","line":19,"column":12,"nodeType":"964","messageId":"965","endLine":19,"endColumn":18},{"ruleId":"962","severity":1,"message":"1014","line":19,"column":20,"nodeType":"964","messageId":"965","endLine":19,"endColumn":29},{"ruleId":"962","severity":1,"message":"979","line":20,"column":12,"nodeType":"964","messageId":"965","endLine":20,"endColumn":18},{"ruleId":"962","severity":1,"message":"980","line":20,"column":20,"nodeType":"964","messageId":"965","endLine":20,"endColumn":29},{"ruleId":"962","severity":1,"message":"984","line":30,"column":33,"nodeType":"964","messageId":"965","endLine":30,"endColumn":34},{"ruleId":"968","severity":1,"message":"1015","line":97,"column":8,"nodeType":"970","endLine":97,"endColumn":12,"suggestions":"1073"},{"ruleId":"962","severity":1,"message":"1017","line":166,"column":11,"nodeType":"964","messageId":"965","endLine":166,"endColumn":23},{"ruleId":"962","severity":1,"message":"1018","line":172,"column":11,"nodeType":"964","messageId":"965","endLine":172,"endColumn":23},{"ruleId":"968","severity":1,"message":"975","line":45,"column":8,"nodeType":"970","endLine":45,"endColumn":10,"suggestions":"1074"},{"ruleId":"962","severity":1,"message":"991","line":1,"column":17,"nodeType":"964","messageId":"965","endLine":1,"endColumn":26},{"ruleId":"962","severity":1,"message":"1075","line":4,"column":10,"nodeType":"964","messageId":"965","endLine":4,"endColumn":22},{"ruleId":"962","severity":1,"message":"1076","line":4,"column":24,"nodeType":"964","messageId":"965","endLine":4,"endColumn":37},{"ruleId":"962","severity":1,"message":"1077","line":23,"column":11,"nodeType":"964","messageId":"965","endLine":23,"endColumn":18},{"ruleId":"968","severity":1,"message":"975","line":45,"column":8,"nodeType":"970","endLine":45,"endColumn":10,"suggestions":"1078"},{"ruleId":"962","severity":1,"message":"1010","line":17,"column":23,"nodeType":"964","messageId":"965","endLine":17,"endColumn":35},{"ruleId":"962","severity":1,"message":"1011","line":18,"column":12,"nodeType":"964","messageId":"965","endLine":18,"endColumn":20},{"ruleId":"962","severity":1,"message":"979","line":20,"column":12,"nodeType":"964","messageId":"965","endLine":20,"endColumn":18},{"ruleId":"962","severity":1,"message":"980","line":20,"column":20,"nodeType":"964","messageId":"965","endLine":20,"endColumn":29},{"ruleId":"962","severity":1,"message":"984","line":30,"column":33,"nodeType":"964","messageId":"965","endLine":30,"endColumn":34},{"ruleId":"968","severity":1,"message":"1015","line":97,"column":8,"nodeType":"970","endLine":97,"endColumn":12,"suggestions":"1079"},{"ruleId":"968","severity":1,"message":"1052","line":109,"column":7,"nodeType":"970","endLine":109,"endColumn":9,"suggestions":"1080"},{"ruleId":"962","severity":1,"message":"1018","line":187,"column":11,"nodeType":"964","messageId":"965","endLine":187,"endColumn":23},{"ruleId":"962","severity":1,"message":"978","line":6,"column":10,"nodeType":"964","messageId":"965","endLine":6,"endColumn":19},{"ruleId":"968","severity":1,"message":"975","line":45,"column":8,"nodeType":"970","endLine":45,"endColumn":10,"suggestions":"1081"},{"ruleId":"968","severity":1,"message":"975","line":45,"column":8,"nodeType":"970","endLine":45,"endColumn":10,"suggestions":"1082"},{"ruleId":"968","severity":1,"message":"975","line":45,"column":8,"nodeType":"970","endLine":45,"endColumn":10,"suggestions":"1083"},{"ruleId":"962","severity":1,"message":"1009","line":17,"column":12,"nodeType":"964","messageId":"965","endLine":17,"endColumn":21},{"ruleId":"962","severity":1,"message":"1010","line":17,"column":23,"nodeType":"964","messageId":"965","endLine":17,"endColumn":35},{"ruleId":"962","severity":1,"message":"1011","line":18,"column":12,"nodeType":"964","messageId":"965","endLine":18,"endColumn":20},{"ruleId":"962","severity":1,"message":"1013","line":19,"column":12,"nodeType":"964","messageId":"965","endLine":19,"endColumn":18},{"ruleId":"962","severity":1,"message":"1014","line":19,"column":20,"nodeType":"964","messageId":"965","endLine":19,"endColumn":29},{"ruleId":"962","severity":1,"message":"979","line":20,"column":12,"nodeType":"964","messageId":"965","endLine":20,"endColumn":18},{"ruleId":"962","severity":1,"message":"980","line":20,"column":20,"nodeType":"964","messageId":"965","endLine":20,"endColumn":29},{"ruleId":"962","severity":1,"message":"984","line":30,"column":33,"nodeType":"964","messageId":"965","endLine":30,"endColumn":34},{"ruleId":"968","severity":1,"message":"1015","line":98,"column":8,"nodeType":"970","endLine":98,"endColumn":12,"suggestions":"1084"},{"ruleId":"962","severity":1,"message":"1017","line":173,"column":11,"nodeType":"964","messageId":"965","endLine":173,"endColumn":23},{"ruleId":"962","severity":1,"message":"1018","line":180,"column":11,"nodeType":"964","messageId":"965","endLine":180,"endColumn":23},{"ruleId":"962","severity":1,"message":"1009","line":17,"column":12,"nodeType":"964","messageId":"965","endLine":17,"endColumn":21},{"ruleId":"962","severity":1,"message":"1010","line":17,"column":23,"nodeType":"964","messageId":"965","endLine":17,"endColumn":35},{"ruleId":"962","severity":1,"message":"1011","line":18,"column":12,"nodeType":"964","messageId":"965","endLine":18,"endColumn":20},{"ruleId":"962","severity":1,"message":"1013","line":19,"column":12,"nodeType":"964","messageId":"965","endLine":19,"endColumn":18},{"ruleId":"962","severity":1,"message":"1014","line":19,"column":20,"nodeType":"964","messageId":"965","endLine":19,"endColumn":29},{"ruleId":"962","severity":1,"message":"979","line":20,"column":12,"nodeType":"964","messageId":"965","endLine":20,"endColumn":18},{"ruleId":"962","severity":1,"message":"980","line":20,"column":20,"nodeType":"964","messageId":"965","endLine":20,"endColumn":29},{"ruleId":"962","severity":1,"message":"984","line":30,"column":33,"nodeType":"964","messageId":"965","endLine":30,"endColumn":34},{"ruleId":"968","severity":1,"message":"1015","line":93,"column":8,"nodeType":"970","endLine":93,"endColumn":12,"suggestions":"1085"},{"ruleId":"962","severity":1,"message":"1017","line":168,"column":11,"nodeType":"964","messageId":"965","endLine":168,"endColumn":23},{"ruleId":"962","severity":1,"message":"1018","line":175,"column":11,"nodeType":"964","messageId":"965","endLine":175,"endColumn":23},{"ruleId":"962","severity":1,"message":"1009","line":17,"column":12,"nodeType":"964","messageId":"965","endLine":17,"endColumn":21},{"ruleId":"962","severity":1,"message":"1010","line":17,"column":23,"nodeType":"964","messageId":"965","endLine":17,"endColumn":35},{"ruleId":"962","severity":1,"message":"1011","line":18,"column":12,"nodeType":"964","messageId":"965","endLine":18,"endColumn":20},{"ruleId":"962","severity":1,"message":"1013","line":19,"column":12,"nodeType":"964","messageId":"965","endLine":19,"endColumn":18},{"ruleId":"962","severity":1,"message":"1014","line":19,"column":20,"nodeType":"964","messageId":"965","endLine":19,"endColumn":29},{"ruleId":"962","severity":1,"message":"979","line":20,"column":12,"nodeType":"964","messageId":"965","endLine":20,"endColumn":18},{"ruleId":"962","severity":1,"message":"980","line":20,"column":20,"nodeType":"964","messageId":"965","endLine":20,"endColumn":29},{"ruleId":"962","severity":1,"message":"984","line":30,"column":33,"nodeType":"964","messageId":"965","endLine":30,"endColumn":34},{"ruleId":"968","severity":1,"message":"1015","line":93,"column":8,"nodeType":"970","endLine":93,"endColumn":12,"suggestions":"1086"},{"ruleId":"962","severity":1,"message":"1017","line":168,"column":11,"nodeType":"964","messageId":"965","endLine":168,"endColumn":23},{"ruleId":"962","severity":1,"message":"1018","line":175,"column":11,"nodeType":"964","messageId":"965","endLine":175,"endColumn":23},{"ruleId":"962","severity":1,"message":"978","line":6,"column":10,"nodeType":"964","messageId":"965","endLine":6,"endColumn":19},{"ruleId":"962","severity":1,"message":"1058","line":6,"column":21,"nodeType":"964","messageId":"965","endLine":6,"endColumn":30},{"ruleId":"968","severity":1,"message":"975","line":46,"column":8,"nodeType":"970","endLine":46,"endColumn":10,"suggestions":"1087"},{"ruleId":"962","severity":1,"message":"1004","line":9,"column":10,"nodeType":"964","messageId":"965","endLine":9,"endColumn":19},{"ruleId":"962","severity":1,"message":"1005","line":9,"column":21,"nodeType":"964","messageId":"965","endLine":9,"endColumn":34},{"ruleId":"962","severity":1,"message":"1006","line":9,"column":36,"nodeType":"964","messageId":"965","endLine":9,"endColumn":48},{"ruleId":"962","severity":1,"message":"1007","line":9,"column":50,"nodeType":"964","messageId":"965","endLine":9,"endColumn":59},{"ruleId":"962","severity":1,"message":"1008","line":9,"column":61,"nodeType":"964","messageId":"965","endLine":9,"endColumn":77},{"ruleId":"962","severity":1,"message":"1054","line":9,"column":78,"nodeType":"964","messageId":"965","endLine":9,"endColumn":87},{"ruleId":"962","severity":1,"message":"1055","line":9,"column":88,"nodeType":"964","messageId":"965","endLine":9,"endColumn":95},{"ruleId":"962","severity":1,"message":"1056","line":9,"column":97,"nodeType":"964","messageId":"965","endLine":9,"endColumn":105},{"ruleId":"962","severity":1,"message":"1009","line":17,"column":12,"nodeType":"964","messageId":"965","endLine":17,"endColumn":21},{"ruleId":"962","severity":1,"message":"1010","line":17,"column":23,"nodeType":"964","messageId":"965","endLine":17,"endColumn":35},{"ruleId":"962","severity":1,"message":"1011","line":18,"column":12,"nodeType":"964","messageId":"965","endLine":18,"endColumn":20},{"ruleId":"962","severity":1,"message":"1013","line":19,"column":12,"nodeType":"964","messageId":"965","endLine":19,"endColumn":18},{"ruleId":"962","severity":1,"message":"1014","line":19,"column":20,"nodeType":"964","messageId":"965","endLine":19,"endColumn":29},{"ruleId":"962","severity":1,"message":"979","line":20,"column":12,"nodeType":"964","messageId":"965","endLine":20,"endColumn":18},{"ruleId":"962","severity":1,"message":"980","line":20,"column":20,"nodeType":"964","messageId":"965","endLine":20,"endColumn":29},{"ruleId":"962","severity":1,"message":"984","line":30,"column":33,"nodeType":"964","messageId":"965","endLine":30,"endColumn":34},{"ruleId":"968","severity":1,"message":"1015","line":93,"column":8,"nodeType":"970","endLine":93,"endColumn":12,"suggestions":"1088"},{"ruleId":"962","severity":1,"message":"1017","line":168,"column":11,"nodeType":"964","messageId":"965","endLine":168,"endColumn":23},{"ruleId":"962","severity":1,"message":"1018","line":175,"column":11,"nodeType":"964","messageId":"965","endLine":175,"endColumn":23},{"ruleId":"1026","severity":1,"message":"1027","line":16,"column":29,"nodeType":"1022","endLine":16,"endColumn":120},{"ruleId":"1028","severity":1,"message":"1029","line":17,"column":29,"nodeType":"1022","endLine":17,"endColumn":89},{"ruleId":"1024","severity":1,"message":"1025","line":17,"column":29,"nodeType":"1022","endLine":17,"endColumn":89},{"ruleId":"1024","severity":1,"message":"1025","line":67,"column":29,"nodeType":"1022","endLine":67,"endColumn":87},{"ruleId":"1020","severity":1,"message":"1021","line":39,"column":35,"nodeType":"1022","endLine":42,"endColumn":11},{"ruleId":"1020","severity":1,"message":"1021","line":46,"column":17,"nodeType":"1022","endLine":49,"endColumn":19},{"ruleId":"1020","severity":1,"message":"1021","line":54,"column":13,"nodeType":"1022","endLine":54,"endColumn":124},{"ruleId":"1020","severity":1,"message":"1023","line":64,"column":13,"nodeType":"1022","endLine":64,"endColumn":30},{"ruleId":"962","severity":1,"message":"1030","line":6,"column":13,"nodeType":"964","messageId":"965","endLine":6,"endColumn":17},{"ruleId":"962","severity":1,"message":"1031","line":7,"column":11,"nodeType":"964","messageId":"965","endLine":7,"endColumn":28},{"ruleId":"962","severity":1,"message":"991","line":1,"column":27,"nodeType":"964","messageId":"965","endLine":1,"endColumn":36},{"ruleId":"962","severity":1,"message":"1032","line":6,"column":10,"nodeType":"964","messageId":"965","endLine":6,"endColumn":15},{"ruleId":"962","severity":1,"message":"1033","line":8,"column":11,"nodeType":"964","messageId":"965","endLine":8,"endColumn":19},{"ruleId":"962","severity":1,"message":"1030","line":9,"column":12,"nodeType":"964","messageId":"965","endLine":9,"endColumn":16},{"ruleId":"962","severity":1,"message":"1034","line":10,"column":18,"nodeType":"964","messageId":"965","endLine":10,"endColumn":25},{"ruleId":"962","severity":1,"message":"1035","line":11,"column":12,"nodeType":"964","messageId":"965","endLine":11,"endColumn":18},{"ruleId":"962","severity":1,"message":"1036","line":11,"column":20,"nodeType":"964","messageId":"965","endLine":11,"endColumn":29},{"ruleId":"962","severity":1,"message":"1037","line":13,"column":11,"nodeType":"964","messageId":"965","endLine":13,"endColumn":31},{"ruleId":"962","severity":1,"message":"1038","line":48,"column":11,"nodeType":"964","messageId":"965","endLine":48,"endColumn":26},{"ruleId":"962","severity":1,"message":"1030","line":5,"column":12,"nodeType":"964","messageId":"965","endLine":5,"endColumn":16},{"ruleId":"962","severity":1,"message":"1031","line":6,"column":11,"nodeType":"964","messageId":"965","endLine":6,"endColumn":28},{"ruleId":"962","severity":1,"message":"1030","line":5,"column":12,"nodeType":"964","messageId":"965","endLine":5,"endColumn":16},{"ruleId":"962","severity":1,"message":"1031","line":6,"column":11,"nodeType":"964","messageId":"965","endLine":6,"endColumn":28},{"ruleId":"962","severity":1,"message":"1030","line":5,"column":12,"nodeType":"964","messageId":"965","endLine":5,"endColumn":16},{"ruleId":"962","severity":1,"message":"1031","line":6,"column":11,"nodeType":"964","messageId":"965","endLine":6,"endColumn":28},{"ruleId":"962","severity":1,"message":"1030","line":5,"column":12,"nodeType":"964","messageId":"965","endLine":5,"endColumn":16},{"ruleId":"962","severity":1,"message":"1031","line":6,"column":11,"nodeType":"964","messageId":"965","endLine":6,"endColumn":28},{"ruleId":"962","severity":1,"message":"1030","line":5,"column":12,"nodeType":"964","messageId":"965","endLine":5,"endColumn":16},{"ruleId":"962","severity":1,"message":"1031","line":6,"column":11,"nodeType":"964","messageId":"965","endLine":6,"endColumn":28},{"ruleId":"962","severity":1,"message":"1030","line":5,"column":12,"nodeType":"964","messageId":"965","endLine":5,"endColumn":16},{"ruleId":"962","severity":1,"message":"1031","line":6,"column":11,"nodeType":"964","messageId":"965","endLine":6,"endColumn":28},{"ruleId":"962","severity":1,"message":"1039","line":153,"column":19,"nodeType":"964","messageId":"965","endLine":153,"endColumn":25},{"ruleId":"962","severity":1,"message":"1039","line":171,"column":19,"nodeType":"964","messageId":"965","endLine":171,"endColumn":25},{"ruleId":"1024","severity":1,"message":"1025","line":23,"column":9,"nodeType":"1022","endLine":27,"endColumn":10},{"ruleId":"968","severity":1,"message":"1040","line":49,"column":8,"nodeType":"970","endLine":49,"endColumn":14,"suggestions":"1089"},{"ruleId":"1042","severity":1,"message":"1043","line":10,"column":41,"nodeType":"1044","messageId":"1045","endLine":10,"endColumn":43},{"ruleId":"968","severity":1,"message":"1048","line":45,"column":8,"nodeType":"970","endLine":45,"endColumn":22,"suggestions":"1090"},{"ruleId":"1024","severity":1,"message":"1025","line":49,"column":13,"nodeType":"1022","endLine":49,"endColumn":86},{"ruleId":"968","severity":1,"message":"1046","line":10,"column":8,"nodeType":"970","endLine":10,"endColumn":10,"suggestions":"1091"},{"ruleId":"1028","severity":1,"message":"1029","line":39,"column":17,"nodeType":"1022","endLine":39,"endColumn":126},{"ruleId":"1024","severity":1,"message":"1025","line":39,"column":17,"nodeType":"1022","endLine":39,"endColumn":126},{"ruleId":"1024","severity":1,"message":"1025","line":26,"column":9,"nodeType":"1022","endLine":26,"endColumn":43},{"ruleId":"962","severity":1,"message":"1092","line":4,"column":3,"nodeType":"964","messageId":"965","endLine":4,"endColumn":17},{"ruleId":"962","severity":1,"message":"1093","line":5,"column":3,"nodeType":"964","messageId":"965","endLine":5,"endColumn":11},{"ruleId":"962","severity":1,"message":"1094","line":6,"column":3,"nodeType":"964","messageId":"965","endLine":6,"endColumn":6},{"ruleId":"1024","severity":1,"message":"1095","line":7,"column":7,"nodeType":"1022","endLine":14,"endColumn":8},{"ruleId":"1024","severity":1,"message":"1025","line":32,"column":15,"nodeType":"1022","endLine":32,"endColumn":53},"no-native-reassign",["1096"],"no-negated-in-lhs",["1097"],"no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","'getQueryChart' is defined but never used.","'setTotalInActiveUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: '_loadReports'. Either include it or remove the dependency array.","ArrayExpression",["1098"],"'_submitHandler' is assigned a value but never used.","'_resetFilterHandler' is assigned a value but never used.","'_refreshData' is assigned a value but never used.","React Hook useEffect has a missing dependency: '_loadMoreItems'. Either include it or remove the dependency array.",["1099"],"'getBranches' is defined but never used.","'getCities' is defined but never used.","'cities' is assigned a value but never used.","'setCities' is assigned a value but never used.","'branches' is assigned a value but never used.","'setBranches' is assigned a value but never used.","'setIsUploading' is assigned a value but never used.","'_' is assigned a value but never used.","React Hook useEffect has missing dependencies: '_setFormData', 'dispatch', and 'updateForm'. Either include them or remove the dependency array.",["1100"],"'uploadImageHandler' is assigned a value but never used.","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["1101"],"'useEffect' is defined but never used.","'moment' is defined but never used.","'userReauthenticate' is assigned a value but never used.","'RouteNames' is defined but never used.","React Hook useEffect has missing dependencies: '_loadMoreItems' and 'dispatch'. Either include them or remove the dependency array.",["1102"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'addBranch' is defined but never used.","'getBranchById' is defined but never used.","'updateBranch' is defined but never used.","'getStates' is defined but never used.","'getCitiesByState' is defined but never used.","'loadState' is assigned a value but never used.","'setLoadState' is assigned a value but never used.","'loadCity' is assigned a value but never used.","'setLoadCity' is assigned a value but never used.","'states' is assigned a value but never used.","'setStates' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'updateForm'. Either include them or remove the dependency array.",["1103"],"'_handleState' is assigned a value but never used.","'__loadCities' is assigned a value but never used.",["1104"],"react/jsx-pascal-case","Imported JSX component _Link must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component _PageElements must be in PascalCase or SCREAMING_SNAKE_CASE","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'show' is assigned a value but never used.","'moreButtonHandler' is assigned a value but never used.","'toast' is defined but never used.","'dispatch' is assigned a value but never used.","'setData' is assigned a value but never used.","'status' is assigned a value but never used.","'setStatus' is assigned a value but never used.","'_changeBookingStatus' is assigned a value but never used.","'_confirmHandler' is assigned a value but never used.","'result' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["1105"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook React.useEffect has missing dependencies: 'isOpen' and 'onOpen'. Either include them or remove the dependency array. If 'onOpen' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1106"],"React Hook useEffect has missing dependencies: 'dispatch', 'socket', and 'user'. Either include them or remove the dependency array.",["1107"],["1108"],["1109"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["1110"],"'addStates' is defined but never used.","'addCity' is defined but never used.","'addSkill' is defined but never used.",["1111"],"'getSkills' is defined but never used.",["1112"],["1113"],["1114"],["1115"],["1116"],["1117"],["1118"],["1096"],["1097"],["1119"],["1120"],["1121"],["1122"],["1123"],["1124"],["1125"],"'ApolloClient' is defined but never used.","'InMemoryCache' is defined but never used.","'loading' is assigned a value but never used.",["1126"],["1127"],["1128"],["1129"],["1130"],["1131"],["1132"],["1133"],["1134"],["1135"],["1136"],["1137"],["1138"],["1139"],"'ApolloProvider' is defined but never used.","'useQuery' is defined but never used.","'gql' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"1140","fix":"1141"},{"desc":"1142","fix":"1143"},{"desc":"1144","fix":"1145"},{"desc":"1146","fix":"1147"},{"desc":"1148","fix":"1149"},{"desc":"1150","fix":"1151"},{"desc":"1142","fix":"1152"},{"desc":"1153","fix":"1154"},{"desc":"1155","fix":"1156"},{"desc":"1157","fix":"1158"},{"desc":"1142","fix":"1159"},{"desc":"1150","fix":"1160"},{"desc":"1161","fix":"1162"},{"desc":"1150","fix":"1163"},{"desc":"1142","fix":"1164"},{"desc":"1142","fix":"1165"},{"desc":"1150","fix":"1166"},{"desc":"1142","fix":"1167"},{"desc":"1150","fix":"1168"},{"desc":"1150","fix":"1169"},{"desc":"1142","fix":"1170"},{"desc":"1140","fix":"1171"},{"desc":"1144","fix":"1172"},{"desc":"1142","fix":"1173"},{"desc":"1148","fix":"1174"},{"desc":"1146","fix":"1175"},{"desc":"1150","fix":"1176"},{"desc":"1142","fix":"1177"},{"desc":"1142","fix":"1178"},{"desc":"1150","fix":"1179"},{"desc":"1161","fix":"1180"},{"desc":"1142","fix":"1181"},{"desc":"1142","fix":"1182"},{"desc":"1142","fix":"1183"},{"desc":"1150","fix":"1184"},{"desc":"1150","fix":"1185"},{"desc":"1150","fix":"1186"},{"desc":"1142","fix":"1187"},{"desc":"1150","fix":"1188"},{"desc":"1153","fix":"1189"},{"desc":"1157","fix":"1190"},{"desc":"1155","fix":"1191"},"Update the dependencies array to be: [_loadReports]",{"range":"1192","text":"1193"},"Update the dependencies array to be: [_loadMoreItems]",{"range":"1194","text":"1195"},"Update the dependencies array to be: [_setFormData, dispatch, id, updateForm]",{"range":"1196","text":"1197"},"Update the dependencies array to be: [dispatch, id]",{"range":"1198","text":"1199"},"Update the dependencies array to be: [_loadMoreItems, dispatch]",{"range":"1200","text":"1201"},"Update the dependencies array to be: [dispatch, id, updateForm]",{"range":"1202","text":"1203"},{"range":"1204","text":"1195"},"Update the dependencies array to be: [chat, socket]",{"range":"1205","text":"1206"},"Update the dependencies array to be: [isOpen, onOpen]",{"range":"1207","text":"1208"},"Update the dependencies array to be: [dispatch, socket, updateSocket, user]",{"range":"1209","text":"1210"},{"range":"1211","text":"1195"},{"range":"1212","text":"1203"},"Update the dependencies array to be: [dispatch]",{"range":"1213","text":"1214"},{"range":"1215","text":"1203"},{"range":"1216","text":"1195"},{"range":"1217","text":"1195"},{"range":"1218","text":"1203"},{"range":"1219","text":"1195"},{"range":"1220","text":"1203"},{"range":"1221","text":"1203"},{"range":"1222","text":"1195"},{"range":"1223","text":"1193"},{"range":"1224","text":"1197"},{"range":"1225","text":"1195"},{"range":"1226","text":"1201"},{"range":"1227","text":"1199"},{"range":"1228","text":"1203"},{"range":"1229","text":"1195"},{"range":"1230","text":"1195"},{"range":"1231","text":"1203"},{"range":"1232","text":"1214"},{"range":"1233","text":"1195"},{"range":"1234","text":"1195"},{"range":"1235","text":"1195"},{"range":"1236","text":"1203"},{"range":"1237","text":"1203"},{"range":"1238","text":"1203"},{"range":"1239","text":"1195"},{"range":"1240","text":"1203"},{"range":"1241","text":"1206"},{"range":"1242","text":"1210"},{"range":"1243","text":"1208"},[928,930],"[_loadReports]",[1067,1069],"[_loadMoreItems]",[3494,3498],"[_setFormData, dispatch, id, updateForm]",[2429,2431],"[dispatch, id]",[1437,1439],"[_loadMoreItems, dispatch]",[3091,3095],"[dispatch, id, updateForm]",[1451,1453],[1833,1839],"[chat, socket]",[317,319],"[isOpen, onOpen]",[1617,1631],"[dispatch, socket, updateSocket, user]",[1462,1464],[3021,3025],[3427,3429],"[dispatch]",[3027,3031],[1547,1549],[1474,1476],[2899,2903],[1476,1478],[3129,3133],[2923,2927],[1480,1482],[928,930],[3494,3498],[1067,1069],[1437,1439],[2429,2431],[3091,3095],[1451,1453],[1462,1464],[3021,3025],[3427,3429],[1474,1476],[1476,1478],[1480,1482],[3129,3133],[2899,2903],[2923,2927],[1547,1549],[3027,3031],[1833,1839],[1617,1631],[317,319]]